name: cpp-benchmark

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
    branches: [main]
    paths:
      - 'deps/mettagrid/**'
  push:
    branches: [main]
    paths:
      - 'deps/mettagrid/**'
  workflow_dispatch: {}

jobs:
  cpp-benchmark:
    if: github.event.pull_request.draft == false || github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup C++
        uses: ./.github/actions/cpp-setup

      - name: Build and run benchmarks
        run: |
          make check-bench-tools
          mkdir -p benchmark_output
          # Redirect benchmark output to JSON
          for bench_exec in $(find build/benchmarks -type f -executable); do
            echo "Running benchmark $$bench_exec..."
            $$bench_exec --benchmark_format=json > benchmark_output/$(basename $$bench_exec).json
          done

      - name: Install Bencher CLI
        uses: bencherdev/bencher@main

      - name: Validate Bencher Token
        env:
          BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Bencher token length: ${#BENCHER_API_TOKEN}"
          echo "Bencher token SHA256: $(echo -n "$BENCHER_API_TOKEN" | sha256sum)"

      - name: Upload to Bencher
        env:
          BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.ref == 'refs/heads/main' ? 'main' : github.head_ref }}
        if: (github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork)
        run: |
          for file in benchmark_output/*.json; do
            bencher run \
              --project mettagrid-sv3f5i2k \
              --token "$BENCHER_API_TOKEN" \
              --branch "$BRANCH_NAME" \
              --testbed ubuntu-latest \
              --adapter google_benchmark \
              --github-actions "$GITHUB_TOKEN" \
              --file "$file" > /dev/null
          done