name: py-test
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch: {}
jobs:
  py-test:
    if: github.event.pull_request.draft == false || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check for Python file changes
        id: check_files
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: changedFiles } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            const hasRelevantChanges = changedFiles.some(file => {
              return file.filename.endsWith('.py') || 
                     file.filename === 'requirements.txt' ||
                     file.filename.includes('/deps/mettagrid/');
            });
            
            core.setOutput('has_relevant_changes', hasRelevantChanges);
      
      # For push events, we'll always run the tests
      - name: Set relevant changes for push events
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: echo "HAS_RELEVANT_CHANGES=true" >> $GITHUB_ENV
        
      - name: Setup Python
        if: steps.check_files.outputs.has_relevant_changes == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: ./.github/actions/py-setup
        
      - name: List installed packages
        if: steps.check_files.outputs.has_relevant_changes == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: |
          source venv/bin/activate
          pip list
          
      - name: Run Pytest on core tests
        if: steps.check_files.outputs.has_relevant_changes == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          source venv/bin/activate
          pytest --maxfail=1 --disable-warnings -q
          
      - name: Run Pytest on mettagrid tests
        if: steps.check_files.outputs.has_relevant_changes == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        env:
          HYDRA_FULL_ERROR: 1
          PYTHONPATH: ${{ github.workspace }}/deps/mettagrid
        run: |
          source venv/bin/activate
          cd deps/mettagrid
          pytest --maxfail=1 --disable-warnings -q
          
      - name: Skip testing (no relevant changes)
        if: github.event_name == 'pull_request' && steps.check_files.outputs.has_relevant_changes != 'true'
        run: |
          echo "No Python files or requirements.txt were changed. Skipping tests."
          echo "This check passes automatically when no Python files are changed."