apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: orchestrator
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - "uv"
        - "run"
        - "python"
        - "-m"
        - "metta.app_backend.eval_task_orchestrator"
        env:
        - name: CONTAINER_RUNTIME
          value: {{ .Values.containerRuntime }}
        - name: KUBERNETES_NAMESPACE
          value: {{ .Values.kubernetesNamespace }}
        - name: DOCKER_IMAGE
          value: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        - name: BACKEND_URL
          value: {{ .Values.backendUrl }}
        {{- if .Values.env }}
        {{- toYaml .Values.env | nindent 8 }}
        {{- end }}
        {{- if not .Values.useConfigMap }}
        envFrom:
        - secretRef:
            name: {{ .Values.secretName }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - "python"
            - "-c"
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - "python"
            - "-c"
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 10