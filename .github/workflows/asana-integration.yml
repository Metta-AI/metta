name: Asana Integration

on:
  pull_request:
    # TODO: also handle reviews and comments
    types: [opened, closed, reopened, edited, assigned, unassigned, review_requested, ready_for_review]

jobs:
  asana_integration:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    concurrency: ${{ github.workflow }}-${{ github.event.pull_request.number }}
    permissions:
      contents: read
      pull-requests: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check Asana availability
        id: asana_check
        uses: ./.github/actions/check-credential
        with:
          secret_value: ${{ secrets.ASANA_API_KEY }}
          service_name: "Asana"

      - name: Extract Assignees and Reviewers
        id: extract-assignees-reviewers
        if: steps.asana_check.outputs.available == 'true'
        run: |
          assignees=$(echo '${{ toJSON(github.event.pull_request.assignees) }}' | jq -r '.[].login' | tr '\n' ',' | sed 's/,$//')
          reviewers=$(echo '${{ toJSON(github.event.pull_request.requested_reviewers) }}' | jq -r '.[].login' | tr '\n' ',' | sed 's/,$//')
          echo "assignees=$assignees" >> $GITHUB_OUTPUT
          echo "reviewers=$reviewers" >> $GITHUB_OUTPUT

      - name: Ensure Asana Task
        id: ensure-asana-task
        if: steps.asana_check.outputs.available == 'true'
        uses: ./.github/actions/asana/ensure-task
        with:
          title: ${{ github.event.pull_request.title }}
          description: ${{ github.event.pull_request.body }}
          pr_state: ${{ github.event.pull_request.state }}
          author: ${{ github.event.pull_request.user.login }}
          assignees: ${{ steps.extract-assignees-reviewers.outputs.assignees }}
          reviewers: ${{ steps.extract-assignees-reviewers.outputs.reviewers }}
          project_id: ${{ vars.ASANA_PROJECT_GID }}
          workspace_id: ${{ vars.ASANA_WORKSPACE_GID }}
          asana_token: ${{ secrets.ASANA_API_KEY }}
          github_url: ${{ github.event.pull_request.html_url }}
          github_url_field_id: ${{ vars.ASANA_GITHUB_URL_FIELD_GID }}
          roster_project_id: ${{ vars.ASANA_ROSTER_PROJECT_GID }}
          gh_login_field_id: ${{ vars.ASANA_GH_LOGIN_FIELD_GID }}
          asana_email_field_id: ${{ vars.ASANA_EMAIL_FIELD_GID }}
          pr_author_field_id: ${{ vars.ASANA_PR_AUTHOR_FIELD_GID }}
          asana_attachment_secret: ${{ secrets.ASANA_ATTACHMENT_SECRET }}

      - name: Update PR Description
        if: steps.asana_check.outputs.available == 'true'
        uses: ./.github/actions/asana/update-pr-description
        with:
          pr_number: ${{ github.event.pull_request.number }}
          repo: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          task_url: ${{ steps.ensure-asana-task.outputs.task_url }}
