name: "Launch SkyPilot Job"
description: "Sets up and launches a SkyPilot job with necessary configurations."

inputs:
  trainer_env:
    description: "Training environment configuration (e.g., env/mettagrid/arena/advanced)"
    required: true
  timeout_hours:
    description: "Job timeout in hours"
    required: true
  run_name:
    description: "The unique name for the W&B run and SkyPilot job."
    required: true
  num_gpus:
    description: "Number of GPUs to request. If empty, uses SkyPilot task default."
    required: false
    default: ""
  num_nodes:
    description: "Number of Nodes to request. If empty, uses SkyPilot task default."
    required: false
    default: ""
  wandb_api_key:
    description: "Weights & Biases API Key"
    required: true
  skypilot_api_url:
    description: "SkyPilot API URL"
    default: "https://skypilot-api.softmax-research.net"
  skypilot_service_account_token:
    description: "SkyPilot service account token"
    required: true
  observatory_token:
    description: "Observatory API token"
    required: true
  commit_sha:
    description: "Git commit SHA for status reporting"
    required: true
  github_pat:
    description: "GitHub PAT for status reporting"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Setup uv
      uses: ./.github/actions/setup-uv

    - name: Set up Weights & Biases credentials
      shell: bash
      run: |
        echo "machine api.wandb.ai" > $HOME/.netrc
        echo "login user" >> $HOME/.netrc
        echo "password ${{ inputs.wandb_api_key }}" >> $HOME/.netrc
        chmod 600 $HOME/.netrc
      env:
        WANDB_API_KEY: ${{ inputs.wandb_api_key }}

    - name: Set up Metta observatory
      shell: bash
      run: |
        mkdir -p $HOME/.metta
        echo "${{ inputs.observatory_token }}" > $HOME/.metta/observatory_token
        echo "Created ~/.metta directory with observatory token for SkyPilot file mount"

    - name: Configure SkyPilot API server
      shell: bash
      run: |
        sky api login -e ${{ inputs.skypilot_api_url }} --token ${{ inputs.skypilot_service_account_token }}

    - name: Launch SkyPilot training job
      shell: bash
      run: |
        set -x # Enable command printing for debugging

        chmod +x ./devops/skypilot/launch.py

        LAUNCH_ARGS=(
          "--max-runtime-hours=${{ inputs.timeout_hours }}"
        )

        if [ -n "${{ inputs.num_gpus }}" ]; then
          LAUNCH_ARGS+=( "--gpus=${{ inputs.num_gpus }}" )
        fi

        if [ -n "${{ inputs.num_nodes }}" ]; then
          LAUNCH_ARGS+=( "--nodes=${{ inputs.num_nodes }}" )
        fi

        if [ -n "${{ inputs.github_pat }}" ]; then
          LAUNCH_ARGS+=( "--github-pat=${{ inputs.github_pat }}" )
        fi

        LAUNCH_ARGS+=(
          "--git-ref=${{ inputs.commit_sha }}"
          "train"
          "run=${{ inputs.run_name }}"
          "trainer.curriculum=${{ inputs.trainer_env }}"
        )

        ./devops/skypilot/launch.py "${LAUNCH_ARGS[@]}"

        set +x # Disable command printing
