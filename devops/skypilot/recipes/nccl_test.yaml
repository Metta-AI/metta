# SkyPilot recipe for running NCCL diagnostic tests
# This uses the same infrastructure as training jobs to ensure we test
# the actual configuration that will be used for training.
#
# Usage:
#   ./devops/skypilot/launch.py --recipe nccl_test run=nccl_diag_<timestamp>

name: nccl-test

resources:
  # Copy resource configuration from job.yaml to match training setup
  accelerators: A10G:4
  any_of:
    - region: us-west-2
      zone: us-west-2a
    - region: us-east-1
      zone: us-east-1c

  image_id: docker:softmax/metta:latest
  use_spot: true

workdir: .

file_mounts:
  /workspace/metta:
    name: metta-sync
    store: s3
    source: .
    mode: MOUNT_CACHED

setup: set -u && bash <(curl -fsSL "https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/${METTA_GIT_REF}/devops/skypilot/recipes/setup.sh")

run: |
  eval "$(curl -fsSL "https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/${METTA_GIT_REF}/devops/skypilot/recipes/init_run.py")"

  echo "Running NCCL diagnostic tests..."

  # Run NCCL tests using torchrun for distributed setup
  if [ "${NUM_NODES:-1}" -gt 1 ]; then
    # Multi-node setup
    torchrun \
      --nnodes="${NUM_NODES}" \
      --nproc_per_node="${NUM_GPUS}" \
      --node_rank="${NODE_INDEX}" \
      --master_addr="${MASTER_ADDR}" \
      --master_port="${MASTER_PORT}" \
      ./devops/skypilot/utils/nccl_tests.py
  else
    # Single node setup
    ./devops/skypilot/utils/nccl_tests.py
  fi

envs:
  GITHUB_REPOSITORY: Metta-AI/metta
  GITHUB_PAT: ""
  METTA_GIT_REF: ""
  METTA_RUN_ID: ""
  START_TIME: ""
  WANDB_PASSWORD: ""
  WANDB_PROJECT: ""
  WANDB_ENTITY: ""
  OBSERVATORY_TOKEN: ""
