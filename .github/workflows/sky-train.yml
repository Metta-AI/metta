name: "Launch SkyPilot Training Job"

on:
  workflow_dispatch:
    inputs:
      timeout_hours:
        description: "Job timeout in hours (auto-termination)"
        required: true
        default: 1
        type: number
      trainer_env:
        description: "Training environment configuration"
        required: true
        default: "env/mettagrid/simple"
        type: string
      pr_number:
        description: "PR number (if applicable, leave empty otherwise)"
        required: false
        type: string
  push:
    branches: [main]

env:
  TRAINER_ENV: ${{ github.event.inputs.trainer_env || 'env/mettagrid/simple' }}
  TIMEOUT_HOURS: ${{ github.event.inputs.timeout_hours || 1 }}

jobs:
  launch-batch-job:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Need at least 2 commits to detect merge commit messages

      - name: Setup Python and uv
        uses: ./.github/actions/setup-uv
        with:
          include-dev: true

      - name: Generate run name
        id: generate_run_name
        run: |
          set -eo pipefail

          # Use PR number if available (either from manual input or extracted from merge commit)
          PR_NUMBER="${{ github.event.inputs.pr_number }}"
          if [ -z "$PR_NUMBER" ] && [ "${{ github.event_name }}" == "push" ]; then
            # Try to extract PR number from the merge commit message
            PR_NUMBER=$(git log -1 --pretty=format:"%s" | sed -n 's/.*(#\([0-9][0-9]*\)).*/\1/p')
          fi

          # Generate the run name
          if [ -n "$PR_NUMBER" ]; then
            RUN_NAME="github.sky.pr${PR_NUMBER}"
            echo "Using PR #$PR_NUMBER in run name"
          else
            # Get branch name
            BRANCH=$(git rev-parse --abbrev-ref HEAD | sed 's/[^a-zA-Z0-9]/_/g')
            RUN_NAME="github.sky.$BRANCH"
            echo "Using branch name '$BRANCH' in run name"
          fi

          # Get current timestamp in a format suitable for filenames
          TIMESTAMP=$(date -u +"%Y%m%d_%H%M%S")

          # Get short commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)

          RUN_NAME="$RUN_NAME.$COMMIT_HASH.$TIMESTAMP"

          echo "Generated run name: $RUN_NAME"
          echo "run_name=$RUN_NAME" >> $GITHUB_OUTPUT

      - name: Set up Weights & Biases credentials
        run: |
          echo "machine api.wandb.ai" > $HOME/.netrc
          echo "login user" >> $HOME/.netrc
          echo "password ${{ secrets.WANDB_API_KEY }}" >> $HOME/.netrc
          chmod 600 $HOME/.netrc

      - name: Configure SkyPilot API server
        run: |
          mkdir -p $HOME/.sky
          echo "api_server:" > $HOME/.sky/config.yaml
          echo "  endpoint: ${{ secrets.SKYPILOT_API_URL }}" >> $HOME/.sky/config.yaml

      - name: Launch SkyPilot training job
        run: |
          ./devops/skypilot/launch.py \
            --timeout-hours=$TIMEOUT_HOURS \
            train \
            run=${{ steps.generate_run_name.outputs.run_name }} \
            trainer.curriculum=$TRAINER_ENV
