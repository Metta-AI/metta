name: "Setup uv"
description: "Set up uv and activate the environment"
inputs:
  include-dev:
    description: "Whether to include dev dependencies"
    required: false
    default: "false"
  install-mode:
    description: "Installation mode: 'full' (default), 'no-mettagrid', 'linting', or 'cpp-build'"
    required: false
    default: "full"
runs:
  using: "composite"
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.7.3"
        enable-cache: true

    - name: Create virtual environment with uv
      shell: bash
      run: |
        uv venv

        # Export environment variables
        echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
        echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

        # Handle different installation modes
        case "${{ inputs.install-mode }}" in
          "no-mettagrid")
            # Install everything except mettagrid
            uv sync --no-install-package mettagrid
            ;;
          "linting")
            # Just install linting tools
            uv pip install ruff cpplint
            ;;
          "cpp-build")
            # Just install C++ build dependencies
            uv pip install numpy pybind11
            ;;
          "full"|*)
            # Normal installation
            if [ "${{ inputs.include-dev }}" = "true" ]; then
              uv sync
            else
              uv sync --no-default-groups
            fi
            ;;
        esac
