name: "Automerge Dependabot PRs"
on: pull_request
permissions:
  pull-requests: write
  issues: write # For label creation
  contents: write # For checkout and merges
jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create all necessary labels
        run: |
          # Update type labels with dots
          gh label create "üî¥ major" --color "#FF0000" --description "Major version update" || echo "Label already exists"
          gh label create "üü° minor" --color "#FFFF00" --description "Minor version update" || echo "Label already exists"
          gh label create "üü¢ patch" --color "#00FF00" --description "Patch version update" || echo "Label already exists"

          # Security-related label
          gh label create "üîí security" --color "#D73A4A" --description "Security vulnerability fix" || echo "Label already exists"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Map and add update type label
        run: |
          LABEL=""
          if [ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-major" ]; then
            LABEL="üî¥ major"
          elif [ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-minor" ]; then
            LABEL="üü° minor"
          elif [ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-patch" ]; then
            LABEL="üü¢ patch"
          fi

          if [ -n "$LABEL" ]; then
            gh pr edit "$PR_URL" --add-label "$LABEL"
          fi
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add security label if needed
        if: steps.metadata.outputs.security-vuln-alerts > 0
        run: gh pr edit "$PR_URL" --add-label "üîí security"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for eligible PRs
        run: gh pr edit "$PR_URL" --enable-auto-merge || echo "Unable to enable auto-merge, continuing workflow"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge patch updates and security fixes
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.security-vuln-alerts > 0
        run: |
          # Try to enable auto-merge
          gh pr edit "$PR_URL" --enable-auto-merge || echo "Unable to enable auto-merge"

          # Add a comment to indicate the PR is eligible for auto-merge
          gh pr comment "$PR_URL" --body "‚úÖ This PR contains a patch update or security fix and has been marked for auto-merge."
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify team of major/minor updates
        if: steps.metadata.outputs.update-type != 'version-update:semver-patch' && steps.metadata.outputs.security-vuln-alerts == 0
        run: |
          gh pr comment "$PR_URL" --body "‚ö†Ô∏è This PR contains a non-patch update. Please review carefully before approving."
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
