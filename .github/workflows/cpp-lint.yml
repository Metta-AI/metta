name: cpp-lint
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name != 'workflow_call' }}
on:
  workflow_dispatch: {}
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
      skip_file_check:
        required: false
        type: boolean
        default: false

jobs:
  cpp-lint:
    if: >-
      github.event.pull_request.draft == false || 
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'workflow_call'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
        
      # Skip file change check if triggered from cpp-checks workflow
      - name: Check for C++ and Cython file changes
        id: cpp_lint_check_files
        if: inputs.skip_file_check != true
        uses: ./.github/actions/file-changes
        with:
          patterns: 'deps/mettagrid/,*.cpp,*.cxx,*.cc,*.h,*.hpp,*.pyx,*.pxd'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set early exit flag
        id: set_early_exit
        if: inputs.skip_file_check != true
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ steps.cpp_lint_check_files.outputs.has_relevant_changes }}" != "true" ]]; then
            echo "EARLY_EXIT=true" >> $GITHUB_ENV
          else
            echo "EARLY_EXIT=false" >> $GITHUB_ENV
          fi
      
      # Always run if triggered from cpp-checks
      - name: Set early exit flag for workflow_call
        if: inputs.skip_file_check == true
        run: |
          echo "EARLY_EXIT=false" >> $GITHUB_ENV
      
      - name: Setup C++
        if: env.EARLY_EXIT == 'false'
        uses: ./.github/actions/cpp-setup
        
      - name: Install clang-format
        if: env.EARLY_EXIT == 'false'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
          
      - name: Run clang-format check
        if: env.EARLY_EXIT == 'false'
        run: |
          echo "Checking C++ formatting..."
          find . -type f \( -name "*.cpp" -o -name "*.h" -o -name "*.hpp" \) \
            -not -path "*/build/*" -not -path "*/venv/*" \
            -exec clang-format --dry-run --Werror {} +
            
      - name: Skip linting (no relevant changes)
        if: env.EARLY_EXIT == 'true'
        run: |
          echo "No C++ files (*.cpp, *.h, *.hpp) were changed. Skipping linting."
          echo "This check passes automatically when no C++ files are changed."