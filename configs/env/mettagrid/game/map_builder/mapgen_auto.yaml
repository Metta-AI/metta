_target_: metta.map.mapgen.MapGen

width: 120
height: 120

root:
  type: metta.map.scenes.auto.Auto

  # (Seed is set outside of the config for the convenience of implementation)
  # seed: 42

  params:
    # How many agents to generate? These are placed randomly over the map.
    num_agents: 0

    # These will be placed anywhere, randomly distributed over the entire map.
    # Values are absolute counts. (TODO: make them percentages?)
    objects:
      {}
      # mine_red: ${uniform:1,800,400}
      # generator_red: ${uniform:1,400,80}
      # altar: ${uniform:1,200,40}
      # armory: ${uniform:1,200,40}
      # lasery: ${uniform:1,200,40}
      # lab: ${uniform:1,200,40}
      # factory: ${uniform:1,200,40}
      # temple: ${uniform:1,200,40}
      # TODO - blocks?

    # The percentage of objects to generate in each area.
    # The percentage will be sampled from the distribution for each room separately.
    room_objects:
      mine_red: ["uniform", 0.0005, 0.01]
      generator_red: ["lognormal", 0.0001, 0.01, 0.03]
      altar: ["lognormal", 0.0001, 0.01, 0.03]
      armory: ["uniform", 0.0005, 0.01]
      lasery: ["uniform", 0.0005, 0.01]
      lab: ["uniform", 0.0005, 0.01]
      factory: ["uniform", 0.0005, 0.01]
      temple: ["uniform", 0.0005, 0.01]

    # Which layout to use? We have two options for now: BSP (binary space partitioning) and a rectangular grid.
    layout:
      # weights for layout choice
      grid: 1
      bsp: 1

    # If we go with grid layout, how many rows and columns?
    grid:
      rows: ["uniform", 2, 4]
      columns: ["uniform", 2, 4]

    # If we go with BSP layout, how many areas?
    bsp:
      area_count: ["uniform", 3, 15]

    # Should some rooms be symmetric?
    room_symmetry:
      # weights for room symmetry choice
      none: 10
      horizontal: 3
      vertical: 3
      x4: 3

    # Which content to use? You can list any scenes here. The list will be passed to a RandomScene.
    # Weights affect the probability of each scene being chosen. Default weight is 1.
    content:
      - scene:
          type: metta.map.scenes.random_scene_from_dir.RandomSceneFromDir
          params:
            dir: ./scenes/dcss/wfc
        weight: 20
      # Note: scenes are relative to the `mettagrid/configs/scenes` directory for now.
      - scene: /wfc/blob.yaml
      - scene: /wfc/blob2.yaml
      - scene: /wfc/blob3.yaml
      - scene: /wfc/blocks.yaml
      - scene: /wfc/dungeons.yaml
      - scene: /wfc/mazelike1.yaml
      - scene: /wfc/mazelike2.yaml
      - scene: /wfc/simple.yaml
      - scene:
          type: metta.map.scenes.maze.MazeKruskal
          params:
            room_size: ["uniform", 1, 3]
            wall_size: ["uniform", 1, 3]
        weight: 3
