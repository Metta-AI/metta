{
	"folders": [
		{
			"name": "metta",
			"path": "."
		},
		{
			"name": "pufferlib",
			"path": "deps/pufferlib"
		},
		{
			"name": "wandb_carbs",
			"path": "deps/wandb_carbs"
		},
		{
			"name": "carbs",
			"path": "deps/carbs"
		},
		{
			"path": "personal"
		}
	],
	"settings": {
		"C_Cpp.default.cppStandard": "c++11",
		"yaml.schemas": {
			"envs/griddly/gdy-schema.json": "envs/griddly/power_grid/*.yaml"
		},
		"ruff.enable": true,
		"ruff.nativeServer": "on",
		"[python]": {
			"editor.formatOnSave": true,
			"editor.defaultFormatter": "charliermarsh.ruff",
			"editor.codeActionsOnSave": {
				"source.fixAll.ruff": "explicit",
				"source.organizeImports.ruff": "explicit"
			}
		},
		"files.associations": {
			"unordered_map": "cpp",
			"__bit_reference": "cpp",
			"__bits": "cpp",
			"__config": "cpp",
			"__debug": "cpp",
			"__errc": "cpp",
			"__hash_table": "cpp",
			"__locale": "cpp",
			"__mutex_base": "cpp",
			"__node_handle": "cpp",
			"__nullptr": "cpp",
			"__split_buffer": "cpp",
			"__string": "cpp",
			"__threading_support": "cpp",
			"__tree": "cpp",
			"__tuple": "cpp",
			"array": "cpp",
			"atomic": "cpp",
			"bitset": "cpp",
			"cctype": "cpp",
			"chrono": "cpp",
			"clocale": "cpp",
			"cmath": "cpp",
			"compare": "cpp",
			"complex": "cpp",
			"concepts": "cpp",
			"cstdarg": "cpp",
			"cstddef": "cpp",
			"cstdint": "cpp",
			"cstdio": "cpp",
			"cstdlib": "cpp",
			"cstring": "cpp",
			"ctime": "cpp",
			"cwchar": "cpp",
			"cwctype": "cpp",
			"deque": "cpp",
			"exception": "cpp",
			"fstream": "cpp",
			"initializer_list": "cpp",
			"iomanip": "cpp",
			"ios": "cpp",
			"iosfwd": "cpp",
			"iostream": "cpp",
			"istream": "cpp",
			"limits": "cpp",
			"locale": "cpp",
			"map": "cpp",
			"memory": "cpp",
			"mutex": "cpp",
			"new": "cpp",
			"numeric": "cpp",
			"optional": "cpp",
			"ostream": "cpp",
			"queue": "cpp",
			"random": "cpp",
			"ratio": "cpp",
			"set": "cpp",
			"sstream": "cpp",
			"stack": "cpp",
			"stdexcept": "cpp",
			"streambuf": "cpp",
			"string": "cpp",
			"string_view": "cpp",
			"system_error": "cpp",
			"tuple": "cpp",
			"type_traits": "cpp",
			"typeinfo": "cpp",
			"unordered_set": "cpp",
			"variant": "cpp",
			"vector": "cpp",
			"algorithm": "cpp",
			"__verbose_abort": "cpp",
			"execution": "cpp",
			"*.pxd": "cython",
			"print": "cpp",
			"any": "cpp",
			"charconv": "cpp",
			"condition_variable": "cpp",
			"csignal": "cpp",
			"forward_list": "cpp",
			"list": "cpp",
			"span": "cpp",
			"format": "cpp",
			"valarray": "cpp",
			"codecvt": "cpp",
			"functional": "cpp"
		},

		// IntelliSense may not automatically resolve packages from your Conda environment.
		// To fix this, first activate the environment and then create a symlink to your
		// environment's site-packages directory somewhere where we can find it at an
		// absolute path.
		//
		// run:
		//     conda activate metta
		//     ln -s "$CONDA_PREFIX/lib/python3.11/site-packages" /var/tmp/metta/conda-site-packages
		//
		// Then ensure "/var/tmp/metta/conda-site-packages" is included in the extraPaths lists below.

		"python.analysis.extraPaths": [
			"/var/tmp/metta/conda-site-packages",
			"mettagrid",
			"deps/pufferlib",
			"deps/carbs",
			"deps/wandb"
		],
		"python.autoComplete.extraPaths": [
			"/var/tmp/metta/conda-site-packages",
			"mettagrid",
			"deps/pufferlib",
			"deps/carbs",
			"deps/wandb"
		],
		"python.analysis.exclude": [
			"**/deps/**"
		],
		"python.analysis.ignore": [
			"**/deps/**"
		],
		"files.watcherExclude": {},
		"files.exclude": {
			"train_dir": true,
			"wandb": true
		},
		"files.excludeGitIgnored": true,
		"terminal.integrated.profiles.osx": {
			"metta-0": {
				"path": "bash",
				"args": [
					"-c",
					"WANDB_KEY=$(cat ~/.netrc | awk '/machine api.wandb.ai/{getline; getline; print $2}') && ssh -i ~/.ssh/id_ed25519 -t metta@metta0 'export WANDB_API_KEY=\"'\"$WANDB_KEY\"'\" SSH_USER=\"'\"$USER\"'\"; bash'"
				],
				"overrideName": true,
				"name": "metta-0",
			},
			"metta-1": {
				"path": "bash",
				"args": [
					"-c",
					"WANDB_KEY=$(cat ~/.netrc | awk '/machine api.wandb.ai/{getline; getline; print $2}') && ssh -i ~/.ssh/id_ed25519 -t metta@metta1 'export WANDB_API_KEY=\"'\"$WANDB_KEY\"'\" SSH_USER=\"'\"$USER\"'\"; bash'"
				],
				"overrideName": true,
				"name": "metta-1",
			},
			"metta-2": {
				"path": "bash",
				"args": [
					"-c",
					"WANDB_KEY=$(cat ~/.netrc | awk '/machine api.wandb.ai/{getline; getline; print $2}') && ssh -i ~/.ssh/id_ed25519 -t metta@metta2 'export WANDB_API_KEY=\"'\"$WANDB_KEY\"'\" SSH_USER=\"'\"$USER\"'\"; bash'"
				],
				"overrideName": true,
				"name": "metta-2",
			},
			"metta-3": {
				"path": "bash",
				"args": [
					"-c",
					"WANDB_KEY=$(cat ~/.netrc | awk '/machine api.wandb.ai/{getline; getline; print $2}') && ssh -i ~/.ssh/id_ed25519 -t metta@metta3 'export WANDB_API_KEY=\"'\"$WANDB_KEY\"'\" SSH_USER=\"'\"$USER\"'\"; bash'"
				],
				"overrideName": true,
				"name": "metta-3",
			},
			"metta-4": {
				"path": "bash",
				"args": [
					"-c",
					"WANDB_KEY=$(cat ~/.netrc | awk '/machine api.wandb.ai/{getline; getline; print $2}') && ssh -i ~/.ssh/id_ed25519 -t metta@metta4 'export WANDB_API_KEY=\"'\"$WANDB_KEY\"'\" SSH_USER=\"'\"$USER\"'\"; bash'"
				],
				"overrideName": true,
				"name": "metta-4",
			}
		},
		"terminal.integrated.cwd": "${workspaceFolder}",
		"terminal.integrated.splitCwd": "workspaceRoot",
		"cSpell.words": [
			"bptt",
			"clipfrac",
			"coef",
			"cooldown",
			"cpus",
			"daveey",
			"dones",
			"heavyball",
			"kickstarter",
			"Kruskal",
			"lasery",
			"lexsort",
			"logratio",
			"metta",
			"mettagrid",
			"minibatch",
			"minibatches",
			"newlogprob",
			"nvec",
			"pufferlib",
			"pytest",
			"PYTHONPATH",
			"relu",
			"skypilot",
			"softmax",
			"tensorclass",
			"tensordict",
			"timestep",
			"timesteps",
			"truncateds",
			"unclipped",
			"vecenv",
			"venv",
			"vloss",
			"wandb",
			"xlarge"
		]
	}
}
