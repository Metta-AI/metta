repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.2
    hooks:
      # Apply Ruff formatter when the hook runs as part of the pre-commit stage
      - id: ruff-format
        name: ruff-format
        stages: [pre-commit]
      # Manual formatter run in --check mode (e.g. metta lint --check/--type)
      - id: ruff-format
        name: ruff-format-check
        args: ["--check"]
        stages: [manual]
      # Ruff linter with autofix for pre-commit runs
      - id: ruff-check
        name: ruff-check
        args: ["--fix"]
        stages: [pre-commit]
      # Manual Ruff linting without auto-fixes
      - id: ruff-check
        name: ruff-check-no-fix
        stages: [manual]

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.7
    hooks:
      # Format JSON/JSONC/VS Code workspace files on pre-commit runs
      - id: prettier
        name: prettier-json
        stages: [pre-commit]
        files: "\\.(json|jsonc|json5|code-workspace)$"
        additional_dependencies:
          - prettier@3.3.3
      # Manual JSON formatting verification (no edits)
      - id: prettier
        name: prettier-json-check
        stages: [manual]
        files: "\\.(json|jsonc|json5|code-workspace)$"
        entry: prettier --check
        additional_dependencies:
          - prettier@3.3.3
      # Format Markdown and docs on pre-commit runs
      - id: prettier
        name: prettier-markdown
        stages: [pre-commit]
        files: "\\.(md|mdown|markdown)$"
        additional_dependencies:
          - prettier@3.3.3
      # Manual Markdown check for CI / metta lint --check
      - id: prettier
        name: prettier-markdown-check
        stages: [manual]
        files: "\\.(md|mdown|markdown)$"
        entry: prettier --check
        additional_dependencies:
          - prettier@3.3.3
      # Format shell scripts with Prettier plugin on pre-commit
      - id: prettier
        name: prettier-shell
        stages: [pre-commit]
        files: "\\.(bash|sh)$"
        additional_dependencies:
          - prettier@3.3.3
          - prettier-plugin-sh@0.13.1
      # Manual shell formatting check
      - id: prettier
        name: prettier-shell-check
        stages: [manual]
        files: "\\.(bash|sh)$"
        entry: prettier --check
        additional_dependencies:
          - prettier@3.3.3
          - prettier-plugin-sh@0.13.1
      # Format TOML metadata/config files on pre-commit
      - id: prettier
        name: prettier-toml
        stages: [pre-commit]
        files: "\\.toml$"
        additional_dependencies:
          - prettier@3.3.3
          - prettier-plugin-toml@2.0.6
      # Manual TOML check (no edits)
      - id: prettier
        name: prettier-toml-check
        stages: [manual]
        files: "\\.toml$"
        entry: prettier --check
        additional_dependencies:
          - prettier@3.3.3
          - prettier-plugin-toml@2.0.6
      # Format YAML (excluding generated configs) on pre-commit
      - id: prettier
        name: prettier-yaml
        stages: [pre-commit]
        files: "\\.(ya?ml)$"
        exclude: "(/configs/|/scenes/|/charts/|\\.github/actions/asana/pr_gh_to_asana/test/)"
        additional_dependencies:
          - prettier@3.3.3
      # Manual YAML check without modifications
      - id: prettier
        name: prettier-yaml-check
        stages: [manual]
        files: "\\.(ya?ml)$"
        exclude: "(/configs/|/scenes/|/charts/|\\.github/actions/asana/pr_gh_to_asana/test/)"
        entry: prettier --check
        additional_dependencies:
          - prettier@3.3.3

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Guard against accidentally committing huge blobs
      - id: check-added-large-files
        stages: [pre-commit, manual]
      # Validate JSON syntax (skip JSONC/VSCode files)
      - id: check-json
        stages: [pre-commit, manual]
        exclude: "(^\\.vscode/|tsconfig.*\\.json$)"
      # Validate YAML syntax (skip generated Helm/Terraform templates)
      - id: check-yaml
        stages: [pre-commit, manual]
        exclude: "(agentdojo/data/suites/workspace.*\\.yaml|^devops/charts/|^devops/tf/)"
      # Block stray pdb/ipdb/etc.
      - id: debug-statements
        stages: [pre-commit, manual]
      # Secrets scan (overridden by githooks mode when necessary)
      - id: detect-private-key
        stages: [pre-commit, manual]
        exclude: "agentdojo/data/suites/workspace_plus/terminal/mock-gist-server/certs/nginx.key"
      # Ensure files end with a newline
      - id: end-of-file-fixer
        stages: [pre-commit, manual]

  - repo: local
    hooks:
      # clang-format fixups for mettagrid C++ sources
      - id: cpp-format
        name: cpp-format
        entry: make -C packages/mettagrid format-fix
        language: system
        pass_filenames: false
        stages: [pre-commit]
      # clang-format verification for manual lint runs
      - id: cpp-format-check
        name: cpp-format-check
        entry: make -C packages/mettagrid format-check
        language: system
        pass_filenames: false
        stages: [manual]
      # cpplint pass to keep C++ style aligned with legacy tooling
      - id: cpp-lint
        name: cpp-lint
        entry: bash packages/mettagrid/tests/cpplint.sh
        language: system
        pass_filenames: false
        stages: [pre-commit, manual]
      # Keep uv.lock in sync with pyproject.toml
      - id: uv-lock
        name: uv-lock
        entry: uv lock --check
        language: system
        pass_filenames: false
        stages: [pre-commit, manual]
