name: Build and publish cogames

on:
  push:
    tags:
      - cogames-v*
  workflow_dispatch:
    inputs:
      publish:
        description: "Enable publishing step"
        required: false
        default: "yes"
        type: choice
        options:
          - "yes"
          - "no"
      target:
        description: "Where to publish: testpypi (safe testing) or pypi (live release)"
        required: false
        default: testpypi
        type: choice
        options:
          - testpypi
          - pypi

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build distributions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"
      - name: Install build tooling
        run: python -m pip install --upgrade pip build twine
      - name: Build distributions
        run: python -m build --outdir dist packages/cogames
      - name: Check distributions
        run: python -m twine check dist/*
      - uses: actions/upload-artifact@v4
        with:
          name: cogames-dist
          path: dist/*

  publish:
    name: Publish to PyPI
    needs: build
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.publish == 'yes' }}
    runs-on: ubuntu-latest
    env:
      PUBLISH_TARGET: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target || 'pypi' }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: cogames-dist
          path: dist
      - name: List distributions
        run: ls -l dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ env.PUBLISH_TARGET == 'testpypi' && 'https://test.pypi.org/legacy/' || 'https://upload.pypi.org/legacy/' }}
          skip-existing: ${{ env.PUBLISH_TARGET == 'testpypi' }}
          verbose: true
