name: Generate Newsletter

on:
  schedule:
    - cron: "0 1 * * 6" # Saturday at 1 AM GMT (Friday at 5 PM PST)
  workflow_dispatch:
    inputs:
      days_to_scan:
        description: "Number of days to scan"
        required: false
        default: "7"
        type: choice
        options: ["1", "7", "14", "30"]
      force_refresh:
        description: "Force cache refresh"
        required: false
        default: false
        type: boolean
      skip_discord:
        description: "Skip Discord posting (test mode)"
        required: false
        default: false
        type: boolean

jobs:
  generate-newsletter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set days to scan
        id: set-days
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            # Use repository variable for scheduled runs, fallback to 7 if not set
            DAYS="${{ vars.PR_NEWSLETTER_HISTORY_DAYS || '7' }}"
            echo "Using repository variable PR_NEWSLETTER_HISTORY_DAYS: $DAYS days"
          else
            # Use workflow input for manual runs, fallback to 7 if not provided
            DAYS="${{ inputs.days_to_scan || '7' }}"
            echo "Using workflow input: $DAYS days"
          fi
          echo "days=$DAYS" >> $GITHUB_OUTPUT
          echo "Selected days to scan: $DAYS"

      - name: Restore PR Summary Cache
        uses: actions/cache@v4
        with:
          path: |
            .pr-digest-cache/
          key: pr-cache-${{ github.repository }}-${{ hashFiles('.github/scripts/generate_pr_summaries.py') }}
          restore-keys: |
            pr-cache-${{ github.repository }}-

      - name: Fetch PR Digest
        id: pr-digest
        uses: ./.github/actions/pr-digest
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: "Metta-AI/metta"
          days: ${{ steps.set-days.outputs.days }}
          force-refresh: ${{ inputs.force_refresh || 'false' }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.3"
          enable-cache: true

      - name: Generate Newsletter
        id: summary
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PR_DIGEST_FILE: ${{ steps.pr-digest.outputs.digest-file }}
          DATE_RANGE: ${{ steps.pr-digest.outputs.date-range }}
          DAYS_TO_SCAN: ${{ steps.set-days.outputs.days }}
          FORCE_REFRESH: ${{ inputs.force_refresh || 'false' }}
        run: |
          uv run .github/scripts/generate_pr_summaries.py

      - name: Post to Discord
        if: ${{ !inputs.skip_discord }}
        uses: ./.github/actions/discord-webhook
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content-file: discord_summary_output.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newsletter-${{ github.run_number }}
          path: |
            discord_summary_output.txt
            collection_summary_output.txt
            pr_summary_data.json
            pr-summaries/
