# @package __global__

defaults:
  - override /sim: simple
  - _self_

trainer:
  env: /env/mettagrid/simple
  evaluate_interval: 200
  optimizer:
    type: muon
  env_overrides:
    sampling: 0.7
    game:
      num_agents: 36
      max_steps: 1000

# policy: wandb://run/b.daveey.train.maze.sm.dr.warm.0
# baselines: wandb://run/b.daveey.train.maze.sm.11x11.0

# policy_uri: wandb://run/b.daveey.t.1.bl
# policy_uri: wandb://run/b.daveey.t.16.dr0

# policy_uri: wandb://run/b.daveey.dr9.muon.latest
# policy_uri: wandb://run/b.daveey.t.1.lra.dr.muon
policy_uri: puffer:///tmp/puffer_metta.pt
#policy_uri: wandb://run/b.alex.robust.npc.s.s.004
# policy_uri: puffer://./train_dir/puffer/puffer_metta.pt

npc_policy_uri: ${policy_uri}
# npc_policy_uri: wandb://run/b.daveey.t.16.dr0
# policy_uri: ${trained_policy_uri}
# npc_policy_uri: ${trained_policy_uri}

eval_db_uri: ${run_dir}/eval_stats

analyzer:
  policy_uri: ${..policy_uri}

sim:
  env: /env/mettagrid/puffer
  num_envs: 1
  num_episodes: 1
  max_time_s: 600
  # policy_agents_pct: 1

  # env: /env/mettagrid/reward_dr
  # env_overrides:
  #   # sampling: 0.7
  #   game:
  #     num_agents: 16
  #     max_steps: 1000
  #     map_builder:
  #       room:
  #         agents: 4
  #       num_rooms: 4

wandb:
  checkpoint_interval: 1

run_id: 19
run: ${oc.env:USER}.local.${run_id}
trained_policy_uri: ${run_dir}/checkpoints

sweep_params: "sweep/fast"
sweep_name: "${oc.env:USER}.local.sweep.${run_id}"
seed: null
