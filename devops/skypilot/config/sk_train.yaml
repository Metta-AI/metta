resources:
  cloud: aws
  any_of:
    # - region: us-east-1
    #   use_spot: true
    #   accelerators: "L4:1"
    - region: us-east-1
      use_spot: true
      accelerators: "A10G:1"
    # - region: us-east-1
    #   accelerators: "L4:1"
    - region: us-east-1
      accelerators: "A10G:1"
    # - region: us-west-2
    #   use_spot: true
    #   accelerators: "L4:1"
    - region: us-west-2
      use_spot: true
      accelerators: "A10G:1"
    # - region: us-west-2
    #   accelerators: "L4:1"
    - region: us-west-2
      accelerators: "A10G:1"
  cpus: 8+
  image_id: docker:metta:latest
  job_recovery:
    strategy: EAGER_NEXT_REGION
    max_restarts_on_errors: 20

file_mounts:
  /mnt/s3/softmax-public:
    source: s3://softmax-public
    mode: MOUNT_CACHED
  /mnt/s3/train_dir:
    name: softmax-train-dir
    store: s3
    mode: MOUNT_CACHED
  /tmp/setup-scripts:
    source: ./devops/skypilot/config
    mode: COPY

setup: |
  set -e
  echo "[SETUP] Starting setup..."

  bash /tmp/setup-scripts/setup-common.sh
  bash /tmp/setup-scripts/gpu-troubleshoot.sh || true

  echo "[SETUP] Setup complete."

run: |
  set -e
  echo "[RUN] Starting run..."
  echo "[RUN] METTA_RUN_ID: $METTA_RUN_ID"
  echo "[RUN] SKYPILOT_TASK_ID: $SKYPILOT_TASK_ID"

  source ~/.bashrc

  cd /workspace/metta
  source ./devops/setup.env

  if [ -f common/src/metta/common/util/skypilot_latency.py ]; then
    echo "[RUN] Collecting skypilot latency..."
    LATENCY_OUTPUT=$(python common/src/metta/common/util/skypilot_latency.py 2>&1) || true
    echo "$LATENCY_OUTPUT"
  else
    echo "[RUN] Latency script is missing!"
  fi

  if [ -f common/src/metta/common/util/cost_monitor.py ]; then
    echo "[RUN] Collecting instance cost..."
    if python common/src/metta/common/util/cost_monitor.py; then
      echo "[RUN] METTA_HOURLY_COST set to: $METTA_HOURLY_COST"
    else
      echo "[RUN] Cost monitor script failed to run."
    fi
  else
    echo "[RUN] Cost monitor script is missing!"
  fi

  echo "[RUN] Running training script..."
  ./devops/$METTA_CMD.sh \
    run=$METTA_RUN_ID \
    $METTA_CMD_ARGS
  TRAIN_EXIT=$?
  echo "[RUN] Training script exit code: $TRAIN_EXIT"

  echo "[RUN] Job complete."
  exit $TRAIN_EXIT

envs:
  METTA_RUN_ID: ""
  METTA_CMD: train
  METTA_CMD_ARGS: ""
  METTA_GIT_REF: main
  WANDB_DIR: ./wandb
  HEARTBEAT_TIMEOUT: 600

  # configured by launch script based on local credentials
  WANDB_PASSWORD: ""
  OBSERVATORY_TOKEN: ""

  # s3 mount slows down uv, so we put DATA_DIR outside of /workspace/metta
  DATA_DIR: /mnt/s3/train_dir
  SKYPILOT_DOCKER_USERNAME: ""
  SKYPILOT_DOCKER_PASSWORD: ""
  SKYPILOT_DOCKER_SERVER: 751442549699.dkr.ecr.us-east-1.amazonaws.com
