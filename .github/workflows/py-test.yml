name: "Python Tests"
concurrency:
  group: py-test-${{ github.ref }}-${{ github.run_id }}
  cancel-in-progress: ${{ github.event_name != 'workflow_call' }}
on:
  workflow_dispatch: {}
  workflow_call:
    inputs:
      ref:
        required: false
        type: string

jobs:
  py-test:
    name: "Tests"
    if: >-
      github.event.pull_request.draft == false || 
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'workflow_call'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      # Skip file change check if triggered from py-checks workflow
      - name: Check for Python file changes
        id: py_test_check_files
        if: github.event_name != 'workflow_call'
        uses: ./.github/actions/file-changes
        with:
          patterns: "**/*.py"
          specific_files: "requirements.txt,setup.py"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set early exit flag
        id: set_early_exit
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "called from a manual workflow, don't skip anything"
            echo "EARLY_EXIT=false" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" != "workflow_call" && "${{ steps.py_test_check_files.outputs.has_relevant_changes }}" == "false" ]]; then
            echo "we looked for changed files and found no relevant changes, exit early!"
            echo "EARLY_EXIT=true" >> $GITHUB_ENV
          else
            echo "in all other cases, don't exit early"
            echo "EARLY_EXIT=false" >> $GITHUB_ENV
          fi

      - name: Setup Python
        if: env.EARLY_EXIT == 'false'
        uses: ./.github/actions/py-setup

      - name: List installed packages
        if: env.EARLY_EXIT == 'false'
        run: |
          source venv/bin/activate
          pip list

      - name: Run Pytest on core tests
        if: env.EARLY_EXIT == 'false'
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          source venv/bin/activate
          pytest --maxfail=1 --disable-warnings -q

      - name: Run Pytest on mettagrid tests
        if: env.EARLY_EXIT == 'false'
        env:
          HYDRA_FULL_ERROR: 1
          PYTHONPATH: ${{ github.workspace }}/mettagrid
        run: |
          source venv/bin/activate
          cd mettagrid
          pytest --maxfail=1 --disable-warnings -q

      - name: tests skipped (no relevant changes)
        if: env.EARLY_EXIT == 'true'
        run: |
          echo "No Python files or requirements.txt were changed. Skipping tests."
          echo "This check passes automatically when no Python files are changed."
