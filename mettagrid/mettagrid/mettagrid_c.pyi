from typing import Any, Dict, List, Tuple

import numpy as np

class MettaGrid:
    obs_width: int
    obs_height: int
    max_steps: int
    current_step: int
    map_width: int
    map_height: int
    num_agents: int
    action_space: Any  # Typically gym.spaces.MultiDiscrete
    observation_space: Any  # Typically gym.spaces.Box

    def __init__(self, env_cfg: dict, map: list) -> None: ...
    def reset(self) -> Tuple[np.ndarray, dict]: ...
    def step(self, actions: np.ndarray) -> Tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray, dict]: ...
    def set_buffers(
        self, observations: np.ndarray, terminals: np.ndarray, truncations: np.ndarray, rewards: np.ndarray
    ) -> None: ...
    def grid_objects(self) -> Dict[int, dict]: ...
    def action_names(self) -> List[str]: ...
    def grid_features(self) -> List[str]: ...
    def get_episode_rewards(self) -> np.ndarray: ...
    def get_episode_stats(self) -> dict: ...
    def action_success(self) -> List[bool]: ...
    def max_action_args(self) -> List[int]: ...
    def object_type_names(self) -> List[str]: ...
    def inventory_item_names(self) -> List[str]: ...
    @staticmethod
    def get_numpy_type_name(type_id: str) -> str: ...
    def is_gym_mode(self) -> bool: ...
