[build-system]
requires = [
  "setuptools==80.9.0",
  "wheel==0.45.1",
  "setuptools_scm==8.1.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[project]
name = "cogames"
description = "Multi-agent cooperative games"
readme = "README.md"
requires-python = ">=3.11.7,<3.13"
dependencies = [
  "heavyball>=2.0.0",
  "mettagrid",
  "packaging>=24.0.0",
  "pufferlib-core",
  "pydantic>=2.11.5",
  "pyyaml>=6.0.2",
  "einops>=0.8.0",
  "scipy>=1.15.3",
  "typer>=0.19.2",
  "rich>=13.7.0",
  "fastapi>=0.115.0",
  "uvicorn>=0.34.0",
  "httpx>=0.28.1",
]
dynamic = ["version"]

[project.scripts]
cogames = "cogames.main:app"

[tool.setuptools.packages.find]
where = ["src"]
include = ["cogames", "cogames.*"]

[tool.setuptools.package-data]
cogames = [
  "py.typed",
  "maps/*.map",
  "maps/**/*.map",
  "assets/**/*.json",
  "assets/**/*.yaml",
  "assets/**/*.yml",
  "assets/**/*.txt",
]

[tool.setuptools_scm]
tag_regex = "^cogames-v(?P<version>\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?)$"
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"
root = "../.."
fallback_version = "0.0.0"
# Provide a specific git command to be used in order to find the correct versioning tags
git_describe_command = [
  "git",
  "describe",
  "--dirty",
  "--tags",
  "--long",
  "--match",
  "cogames-v*",
]
include = [
  "src/cogames/maps/*.map",
  "src/cogames/maps/**/*.map",
  "src/cogames/assets/**/*",
]

[tool.pytest.ini_options]
pythonpath = ["src"]

testpaths = ["tests"]
[tool.coverage.run]
source = ["cogames"]

[tool.uv.sources]
mettagrid = { workspace = true }
