from experiments.recipes.cogs_v_clips.foraging import (
    make_env,
)
from metta.sim.simulation_config import SimulationConfig

evals = {
    "1_extractor_NS": {
        "num_cogs": 4,
        "num_assemblers": 8,
        "num_chests": 1,
        "num_extractors": 1,
        "num_extractor_types": 1,
        "size": 25,
        "assembler_position": ["N", "S"],
    },
    "2_extractor_NS": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 2,
        "num_extractor_types": 2,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["N", "S"],
    },
    "3_extractor_EW": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 3,
        "num_extractor_types": 3,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["E", "W"],
    },
    "4_extractor_NW": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 4,
        "num_extractor_types": 4,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["N", "W"],
    },
    "1_extractor_NSE": {
        "num_cogs": 4,
        "num_assemblers": 8,
        "num_chests": 1,
        "num_extractors": 1,
        "num_extractor_types": 1,
        "size": 25,
        "assembler_position": ["N", "S", "E"],
    },
    "2_extractor_NSE": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 2,
        "num_extractor_types": 2,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["N", "S", "E"],
    },
    "3_extractor_NSE": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 3,
        "num_extractor_types": 3,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["N", "S", "E"],
    },
    "4_extractor_NSE": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 4,
        "num_extractor_types": 4,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["N", "S", "E"],
    },
    "1_extractor_NSEW": {
        "num_cogs": 4,
        "num_assemblers": 8,
        "num_chests": 1,
        "num_extractors": 1,
        "num_extractor_types": 1,
        "size": 25,
        "assembler_position": ["N", "S", "E", "W"],
    },
    "2_extractor_NSEW": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 2,
        "num_extractor_types": 2,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["N", "S", "E", "W"],
    },
    "3_extractor_NSEW": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 3,
        "num_extractor_types": 3,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["N", "S", "E", "W"],
    },
    "4_extractor_NSEW": {
        "num_cogs": 4,
        "num_assemblers": 1,
        "num_extractors": 4,
        "num_extractor_types": 4,
        "num_chests": 1,
        "size": 12,
        "assembler_position": ["N", "S", "E", "W"],
    },
    "4_extractor_foraging_NS": {
        "num_cogs": 4,
        "num_assemblers": 8,
        "num_chests": 1,
        "num_extractors": 4,
        "num_extractor_types": 4,
        "size": 25,
        "assembler_position": ["N", "S"],
    },
    "3_extractor_foraging_NSE": {
        "num_cogs": 4,
        "num_assemblers": 8,
        "num_chests": 1,
        "num_extractors": 3,
        "num_extractor_types": 3,
        "size": 25,
        "assembler_position": ["N", "S", "E"],
    },
    "2_extractor_foraging_NS": {
        "num_cogs": 4,
        "num_assemblers": 8,
        "num_chests": 1,
        "num_extractors": 2,
        "num_extractor_types": 2,
        "size": 25,
        "assembler_position": ["N", "S"],
    },
    "1_extractor_foraging_N": {
        "num_cogs": 4,
        "num_assemblers": 8,
        "num_chests": 1,
        "num_extractors": 1,
        "num_extractor_types": 1,
        "size": 25,
        "assembler_position": ["N"],
    },
}


def make_foraging_eval_suite() -> list[SimulationConfig]:
    return [
        SimulationConfig(name=n, suite="foraging", env=make_env(**args))
        for n, args in evals.items()
    ]
