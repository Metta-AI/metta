name: "Build mettascope2 (native + emscripten)"
description: |
  Builds the native and browser (emscripten) versions of mettascope2.

inputs:
  repo-token:
    description: "GitHub token used for API rate limiting during Nim setup"
    required: true

runs:
  using: "composite"
  steps:
    - name: Cache nimble
      uses: actions/cache@v4
      with:
        path: ~/.nimble
        key: ${{ runner.os }}-nimble-${{ hashFiles('packages/mettagrid/nim/mettascope/mettascope.nimble') }}
        restore-keys: |
          ${{ runner.os }}-nimble-

    - name: Setup Nim
      uses: jiro4989/setup-nim-action@v2
      with:
        repo-token: ${{ inputs.repo-token }}

    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v14

    - name: Install dependencies
      run: |
        cd packages/mettagrid/nim/mettascope

        # relying on installation based on the nimble file was resulting in the wrong
        # version of pixie being installed

        nimble install -y
      shell: bash

    - name: Build mettascope2 (release)
      run: |
        cd packages/mettagrid/nim/mettascope
        nim c -d:release --out:mettascope src/mettascope.nim
      shell: bash

    - name: Build mettascope2 (browser)
      run: |
        cd packages/mettagrid/nim/mettascope

        # The ERROR_ON_UNDEFINED_SYMBOLS=0 flag is needed because the Nim OpenGL bindings
        # include desktop OpenGL functions like glGetTexImage that don't exist in WebGL.
        # Since our code doesn't actually use these functions, it's safe to ignore them.

        nim c -d:emscripten -d:release --passL:"-s ERROR_ON_UNDEFINED_SYMBOLS=0" src/mettascope.nim
      shell: bash
