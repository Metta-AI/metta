name: Launch AWS Training Job

# This workflow can be manually triggered from the GitHub UI
on:
  workflow_dispatch:
    inputs:
      timeout_minutes:
        description: 'Job timeout in minutes (auto-termination)'
        required: true
        default: '60'
        type: number
      trainer_env:
        description: 'Training environment configuration'
        required: true
        default: 'env/mettagrid/simple'
        type: string
      pr_number:
        description: 'PR number (if applicable, leave empty otherwise)'
        required: false
        type: string


jobs:
  launch-batch-job:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for AWS credentials
      contents: read # This is required to checkout the repository

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python and uv
        id: setup-python-uv
        uses: ./.github/actions/setup-python-uv

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Get current commit hash
        id: get_commit_hash
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "commit_hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
          echo "Commit hash: $COMMIT_HASH"

      - name: Generate run name
        id: generate_run_name
        run: |
          # Get short commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)
          
          # Get current timestamp in a format suitable for filenames
          TIMESTAMP=$(date -u +"%Y%m%d_%H%M%S")
          
          # Get branch name
          BRANCH=$(git rev-parse --abbrev-ref HEAD | sed 's/[^a-zA-Z0-9]/_/g')
          
          # Generate the run name
          if [ -n "${{ github.event.inputs.pr_number }}" ]; then
            # Include PR number in run name if provided
            RUN_NAME="github.pr${{ github.event.inputs.pr_number }}.$COMMIT_HASH.$TIMESTAMP"
            echo "Using PR #${{ github.event.inputs.pr_number }} in run name"
          else
            # Use branch name if no PR number provided
            RUN_NAME="github.$BRANCH.$COMMIT_HASH.$TIMESTAMP"
            echo "Using branch name '$BRANCH' in run name"
          fi
          
          echo "Generated run name: $RUN_NAME"
          echo "run_name=$RUN_NAME" >> $GITHUB_OUTPUT

      - name: Launch AWS Batch job
        run: |
          python -m devops.aws.batch.launch_task \
            --cmd=train \
            --run=${{ steps.generate_run_name.outputs.run_name }} \
            --git-commit=${{ steps.get_commit_hash.outputs.commit_hash }} \
            --timeout-minutes=${{ github.event.inputs.timeout_minutes }} \
            --skip-validation \
            --skip-push-check \
            --profile="" \
            trainer.env=${{ github.event.inputs.trainer_env }}

      - name: Output job details
        run: |
          echo "Training job launched with the following details:"
          echo "Run name: ${{ steps.generate_run_name.outputs.run_name }}"
          echo "Commit hash: ${{ steps.get_commit_hash.outputs.commit_hash }}"
          if [ -n "${{ github.event.inputs.pr_number }}" ]; then
            echo "Pull Request: #${{ github.event.inputs.pr_number }}"
          else
            echo "Branch: $(git rev-parse --abbrev-ref HEAD)"
          fi
          echo "Auto-termination: After ${{ github.event.inputs.timeout_minutes }} minutes"
          echo "Environment: ${{ github.event.inputs.trainer_env }}"