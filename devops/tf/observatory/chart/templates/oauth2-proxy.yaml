apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: "{{ .Release.Name }}-oauth2-proxy"
  template:
    metadata:
      labels:
        k8s-app: "{{ .Release.Name }}-oauth2-proxy"
    spec:
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:latest
        imagePullPolicy: Always
        args:
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        {{- range .Values.oauth2_proxy.email_domains | required "oauth2_proxy.email_domains is required" }}
        - --email-domain={{ . }}
        {{- end }}
        envFrom:
        - secretRef:
            name: {{ .Values.oauth2_proxy.secret_name | required "oauth2_proxy.secret_name is required" }}
        ports:
        - containerPort: 4180
          protocol: TCP
      volumes:
      - name: secrets
        secret:
          secretName: {{ .Values.oauth2_proxy.secret_name | required "oauth2_proxy.secret_name is required" }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-oauth2-proxy
spec:
  ports:
  - port: 4180
    targetPort: 4180
  selector:
    k8s-app: "{{ .Release.Name }}-oauth2-proxy"
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-oauth2-proxy
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  rules:
  - host: "{{ .Values.host | required "host is required" }}"
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: "{{ .Release.Name }}-oauth2-proxy"
            port:
              number: 4180
  tls:
  - hosts:
    - {{ .Values.host | required "host is required" }}
    secretName: {{ .Release.Name }}-tls
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    cert-manager.io/cluster-issuer: {{ .Values.cert_manager_issuer | required "cert_manager_issuer is required" }}
spec:
  ingressClassName: nginx
  rules:
  - host: "{{ .Values.host }}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}-backend
            port:
              number: 8000
  tls:
  - hosts:
    - {{ .Values.host | required "host is required" }}
    secretName: {{ .Release.Name }}-tls
