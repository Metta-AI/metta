name: py-test
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name != 'workflow_call' }}
on:
  workflow_dispatch: {}
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
      skip_file_check:
        required: false
        type: boolean
        default: false
jobs:
  py-test:
    if: >-
      github.event.pull_request.draft == false || 
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'workflow_call'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
        
      # Skip file change check if triggered from py-checks workflow
      - name: Check for Python file changes
        id: py_test_check_files
        if: inputs.skip_file_check != true
        uses: ./.github/actions/file-changes
        with:
          patterns: '*.py'
          specific_files: 'requirements.txt,setup.py'
          directory_paths: 'tests/,benchmarks/,deps/mettagrid/tests/,deps/mettagrid/benchmarks/'
          github-token: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Set early exit flag
        id: set_early_exit
        if: inputs.skip_file_check != true
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ steps.py_test_check_files.outputs.has_relevant_changes }}" != "true" ]]; then
            echo "EARLY_EXIT=true" >> $GITHUB_ENV
          else
            echo "EARLY_EXIT=false" >> $GITHUB_ENV
          fi
      
      # Always run if triggered from py-checks
      - name: Set early exit flag for workflow_call
        if: inputs.skip_file_check == true
        run: |
          echo "EARLY_EXIT=false" >> $GITHUB_ENV
      
      - name: Setup Python
        if: env.EARLY_EXIT == 'false'
        uses: ./.github/actions/py-setup
        
      - name: List installed packages
        if: env.EARLY_EXIT == 'false'
        run: |
          source venv/bin/activate
          pip list
          
      - name: Run Pytest on core tests
        if: env.EARLY_EXIT == 'false'
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          source venv/bin/activate
          pytest --maxfail=1 --disable-warnings -q
          
      - name: Run Pytest on mettagrid tests
        if: env.EARLY_EXIT == 'false'
        env:
          HYDRA_FULL_ERROR: 1
          PYTHONPATH: ${{ github.workspace }}/deps/mettagrid
        run: |
          source venv/bin/activate
          cd deps/mettagrid
          pytest --maxfail=1 --disable-warnings -q
          
      - name: Skip testing (no relevant changes)
        if: env.EARLY_EXIT == 'true'
        run: |
          echo "No Python files or requirements.txt were changed. Skipping tests."
          echo "This check passes automatically when no Python files are changed."