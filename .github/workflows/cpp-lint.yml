name: "C++ Lint"
concurrency:
  group: cpp-lint-${{ github.ref }}-${{ github.run_id }}
  cancel-in-progress: ${{ github.event_name != 'workflow_call' }}
on:
  workflow_dispatch: {}
  workflow_call:
    inputs:
      ref:
        required: false
        type: string

jobs:
  cpp-lint:
    name: "Lint"
    if: >-
      github.event.pull_request.draft == false || 
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'workflow_call'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      # Skip file change check if triggered from cpp-checks workflow
      - name: Check for C++ and Cython file changes
        id: cpp_lint_check_files
        if: github.event_name != 'workflow_call'
        uses: ./.github/actions/file-changes
        with:
          patterns: "*.cpp,*.cxx,*.cc,*.h,*.hpp,*.pyx,*.pxd"
          directory_paths: "mettagrid/"
          specific_files: "requirements.txt,setup.py"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set early exit flag
        id: set_early_exit
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "called from a manual workflow, don't skip anything"
            echo "EARLY_EXIT=false" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" != "workflow_call" && "${{ steps.cpp_lint_check_files.outputs.has_relevant_changes }}" == "false" ]]; then
            echo "we looked for changed files and found no relevant changes, exit early!"
            echo "EARLY_EXIT=true" >> $GITHUB_ENV
          else
            echo "in all other cases, don't exit early"
            echo "EARLY_EXIT=false" >> $GITHUB_ENV
          fi

      - name: Setup C++
        if: env.EARLY_EXIT == 'false'
        uses: ./.github/actions/cpp-setup

      - name: Install clang-format
        if: env.EARLY_EXIT == 'false'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format

      - name: Run clang-format check
        if: env.EARLY_EXIT == 'false'
        run: |
          echo "Checking C++ formatting..."
          find . -type f \( -name "*.cpp" -o -name "*.h" -o -name "*.hpp" \) \
            -not -path "*/build/*" -not -path "*/venv/*" \
            -exec clang-format --dry-run --Werror {} +

      - name: linting skipped (no relevant changes)
        if: env.EARLY_EXIT == 'true'
        run: |
          echo "No C++ files (*.cpp, *.h, *.hpp) were changed. Skipping linting."
          echo "This check passes automatically when no C++ files are changed."
