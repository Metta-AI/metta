name: Generate PR Summary

on:
  schedule:
    - cron: "0 19 * * 5"
  workflow_dispatch:
    inputs:
      days_to_scan:
        description: "Number of days to scan"
        required: false
        default: "7"
        type: choice
        options: ["7", "14", "30"]
      force_refresh:
        description: "Force cache refresh"
        required: false
        default: false
        type: boolean
      skip_discord:
        description: "Skip Discord posting (test mode)"
        required: false
        default: false
        type: boolean

jobs:
  generate-summary:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore PR Summary Cache
        uses: actions/cache@v4
        with:
          path: |
            .pr-digest-cache/
          key: pr-cache-${{ github.repository }}-${{ hashFiles('.github/scripts/generate_pr_summary.py') }}
          restore-keys: |
            pr-cache-${{ github.repository }}-

      - name: Fetch PR Digest
        id: pr-digest
        uses: ./.github/actions/pr-digest
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: "Metta-AI/metta"
          days: ${{ inputs.days_to_scan || '7' }}
          force-refresh: ${{ inputs.force_refresh || 'false' }}

      - name: Generate Summary
        id: summary
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PR_DIGEST_FILE: ${{ steps.pr-digest.outputs.digest-file }}
          DATE_RANGE: ${{ steps.pr-digest.outputs.date-range }}
          DAYS_TO_SCAN: ${{ inputs.days_to_scan || '7' }}
          FORCE_REFRESH: ${{ inputs.force_refresh || 'false' }}
        run: |
          pip install -r .github/scripts/requirements-pr-summary.txt
          python .github/scripts/generate_pr_summary.py

      - name: Display Summary (Debug)
        run: |
          echo "## PR Summary Generated"
          echo "Date Range: ${{ steps.pr-digest.outputs.date-range }}"
          echo "PR Count: ${{ steps.pr-digest.outputs.pr-count }}"
          echo "Cache Stats: ${{ steps.pr-digest.outputs.cache-stats }}"
          echo ""
          echo "## Summary Content:"
          cat pr_summary_output.txt || echo "No summary generated"

      - name: Post to Discord
        if: ${{ !inputs.skip_discord }}
        uses: ./.github/actions/discord-webhook
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content-file: pr_summary_output.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-summary-${{ github.run_number }}
          path: |
            pr_digest_output.json
            pr_summary_output.txt
            pr_summaries_intermediate.json
            .pr-digest-cache/
