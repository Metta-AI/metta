{{- if .Values.cronjobEnabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "softmax-cronjob.fullname" . }}
  labels:
    {{- include "softmax-cronjob.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  concurrencyPolicy: {{ .Values.concurrencyPolicy }}
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.backoffLimit }}
      template:
        metadata:
          labels:
            {{- include "softmax-cronjob.selectorLabels" . | nindent 12 }}
        spec:
          serviceAccountName: {{ include "softmax-cronjob.serviceAccountName" . }}
          restartPolicy: {{ .Values.restartPolicy }}
          containers:
          - name: {{ .Chart.Name }}
            image: "{{ if .Values.image.registry }}{{ .Values.image.registry }}/{{ end }}{{ .Values.image.name }}:{{ required "tag is required" .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            command: {{ toJson .Values.command }}
            env:
            # Datadog configuration
            - name: DD_ENV
              value: {{ .Values.datadog.env | quote }}
            - name: DD_SERVICE
              value: {{ default .Release.Name .Values.datadog.service | quote }}
            - name: DD_VERSION
              value: {{ .Values.image.tag | quote }}
            - name: DD_SITE
              value: {{ .Values.datadog.site | quote }}
            {{- if .Values.github }}
            # GitHub configuration
            - name: GITHUB_ORG
              value: {{ .Values.github.org | quote }}
            - name: GITHUB_REPO
              value: {{ .Values.github.repo | quote }}
            {{- end }}
            {{- if .Values.asana }}
            # Asana configuration (workspace and project IDs are not secrets)
            - name: ASANA_WORKSPACE_GID
              value: {{ .Values.asana.workspaceGid | quote }}
            {{- if .Values.asana.bugsProjectGid }}
            - name: ASANA_BUGS_PROJECT_GID
              value: {{ .Values.asana.bugsProjectGid | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.kubernetes }}
            # Kubernetes configuration
            - name: K8S_CLUSTER_NAME
              value: {{ .Values.kubernetes.clusterName | quote }}
            {{- end }}
            # Secrets are accessed from AWS Secrets Manager via the serviceAccount IAM role
            # The softmax.aws.secrets_manager module handles fetching them at runtime
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
{{- end }}
