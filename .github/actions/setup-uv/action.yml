name: "Setup uv"
description: "Set up uv and activate the environment"
inputs:
  install-mode:
    description: "Installation mode: 'testing', 'minimal', or 'linting'"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.7.3"
        enable-cache: true
        cache-local-path: "${{ github.workspace }}/.uv-cache"
        prune-cache: true
        cache-suffix: "${{ inputs.install-mode }}-${{ hashFiles('.github/actions/setup-uv/action.yml') }}"
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock
          **/*requirements*.txt
          .uv-cache/**
      env:
        UV_CACHE_DIR: ${{ github.workspace }}/.uv-cache
        UV_PYTHON_INSTALL_DIR: ${{ github.workspace }}/.uv-cache/python

    - name: Create virtual environment with uv
      shell: bash
      env:
        UV_CACHE_DIR: ${{ github.workspace }}/.uv-cache
        UV_PYTHON_INSTALL_DIR: ${{ github.workspace }}/.uv-cache/python
      run: |
        uv venv

        # Export environment variables
        echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
        echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

        # Handle different installation modes
        case "${{ inputs.install-mode }}" in

          "minimal")
            # don't install any packages
            ;;

          "linting")
            uv pip install ruff cpplint
            ;;

          "testing")
            uv sync
            uv pip install pytest pytest-cov pytest-xdist pytest-benchmark gcovr
            ;;

        esac
