{
  "$defs": {
    "ActionConfig": {
      "additionalProperties": false,
      "description": "Python action configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "required_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Required Resources",
          "type": "object"
        },
        "consumed_resources": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Consumed Resources",
          "type": "object"
        }
      },
      "title": "ActionConfig",
      "type": "object"
    },
    "ActionsConfig": {
      "additionalProperties": false,
      "description": "Actions configuration.\n\nOmitted actions are disabled by default.",
      "properties": {
        "noop": {
          "$ref": "#/$defs/ActionConfig"
        },
        "move": {
          "$ref": "#/$defs/ActionConfig"
        },
        "rotate": {
          "$ref": "#/$defs/ActionConfig"
        },
        "put_items": {
          "$ref": "#/$defs/ActionConfig"
        },
        "get_items": {
          "$ref": "#/$defs/ActionConfig"
        },
        "attack": {
          "$ref": "#/$defs/AttackActionConfig"
        },
        "swap": {
          "$ref": "#/$defs/ActionConfig"
        },
        "change_color": {
          "$ref": "#/$defs/ActionConfig"
        },
        "change_glyph": {
          "$ref": "#/$defs/ChangeGlyphActionConfig"
        },
        "resource_mod": {
          "$ref": "#/$defs/ResourceModActionConfig"
        }
      },
      "title": "ActionsConfig",
      "type": "object"
    },
    "AgentConfig": {
      "additionalProperties": false,
      "description": "Python agent configuration.",
      "properties": {
        "default_resource_limit": {
          "default": 255,
          "minimum": 0,
          "title": "Default Resource Limit",
          "type": "integer"
        },
        "resource_limits": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Resource limits - keys can be single resource names or tuples of names for shared limits",
          "title": "Resource Limits",
          "type": "object"
        },
        "freeze_duration": {
          "default": 10,
          "minimum": -1,
          "title": "Freeze Duration",
          "type": "integer"
        },
        "rewards": {
          "$ref": "#/$defs/AgentRewards"
        },
        "action_failure_penalty": {
          "default": 0,
          "minimum": 0,
          "title": "Action Failure Penalty",
          "type": "number"
        },
        "initial_inventory": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Initial Inventory",
          "type": "object"
        },
        "team_id": {
          "default": 0,
          "description": "Team identifier for grouping agents",
          "minimum": 0,
          "title": "Team Id",
          "type": "integer"
        },
        "tags": {
          "description": "Tags for this agent instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "soul_bound_resources": {
          "description": "Resources that cannot be stolen during attacks",
          "items": {
            "type": "string"
          },
          "title": "Soul Bound Resources",
          "type": "array"
        },
        "shareable_resources": {
          "description": "Resources that will be shared when we use another agent",
          "items": {
            "type": "string"
          },
          "title": "Shareable Resources",
          "type": "array"
        },
        "inventory_regen_amounts": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Resources to regenerate and their amounts per regeneration interval",
          "title": "Inventory Regen Amounts",
          "type": "object"
        }
      },
      "title": "AgentConfig",
      "type": "object"
    },
    "AgentRewards": {
      "additionalProperties": false,
      "description": "Agent reward configuration with separate inventory and stats rewards.",
      "properties": {
        "inventory": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Inventory",
          "type": "object"
        },
        "inventory_max": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Inventory Max",
          "type": "object"
        },
        "stats": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Stats",
          "type": "object"
        },
        "stats_max": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Stats Max",
          "type": "object"
        }
      },
      "title": "AgentRewards",
      "type": "object"
    },
    "AreaWhere": {
      "additionalProperties": false,
      "properties": {
        "tags": {
          "default": [],
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        }
      },
      "title": "AreaWhere",
      "type": "object"
    },
    "AsciiConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "uri": {
          "title": "Uri",
          "type": "string"
        }
      },
      "required": [
        "uri"
      ],
      "title": "AsciiConfig",
      "type": "object"
    },
    "AssemblerConfig": {
      "additionalProperties": false,
      "description": "Python assembler configuration.",
      "properties": {
        "name": {
          "default": "",
          "description": "Object name (used for identification)",
          "title": "Name",
          "type": "string"
        },
        "type_id": {
          "description": "Numeric type ID for C++ runtime",
          "maximum": 255,
          "minimum": 0,
          "title": "Type Id",
          "type": "integer"
        },
        "map_char": {
          "default": "?",
          "description": "Character used in ASCII maps",
          "title": "Map Char",
          "type": "string"
        },
        "render_symbol": {
          "default": "\u2753",
          "description": "Symbol used for rendering (e.g., emoji)",
          "title": "Render Symbol",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this object instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "type": {
          "const": "assembler",
          "default": "assembler",
          "title": "Type",
          "type": "string"
        },
        "recipes": {
          "items": {
            "maxItems": 2,
            "minItems": 2,
            "prefixItems": [
              {
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "NW",
                        "N",
                        "NE",
                        "W",
                        "E",
                        "SW",
                        "S",
                        "SE"
                      ],
                      "type": "string"
                    },
                    {
                      "const": "Any",
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "$ref": "#/$defs/RecipeConfig"
              }
            ],
            "type": "array"
          },
          "title": "Recipes",
          "type": "array"
        },
        "allow_partial_usage": {
          "default": false,
          "description": "Allow assembler to be used during cooldown with scaled resource requirements/outputs. This makes less sense if the assembler has multiple recipes.",
          "title": "Allow Partial Usage",
          "type": "boolean"
        },
        "max_uses": {
          "default": 0,
          "description": "Maximum number of uses (0 = unlimited)",
          "minimum": 0,
          "title": "Max Uses",
          "type": "integer"
        },
        "exhaustion": {
          "default": 0.0,
          "description": "Exhaustion rate - cooldown multiplier grows by (1 + exhaustion) after each use (0 = no exhaustion)",
          "minimum": 0.0,
          "title": "Exhaustion",
          "type": "number"
        },
        "clip_immune": {
          "default": false,
          "description": "If true, this assembler cannot be clipped by the Clipper system",
          "title": "Clip Immune",
          "type": "boolean"
        },
        "start_clipped": {
          "default": false,
          "description": "If true, this assembler starts in a clipped state at the beginning of the game",
          "title": "Start Clipped",
          "type": "boolean"
        }
      },
      "required": [
        "type_id"
      ],
      "title": "AssemblerConfig",
      "type": "object"
    },
    "AttackActionConfig": {
      "additionalProperties": false,
      "description": "Python attack action configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "required_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Required Resources",
          "type": "object"
        },
        "consumed_resources": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Consumed Resources",
          "type": "object"
        },
        "defense_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Defense Resources",
          "type": "object"
        }
      },
      "title": "AttackActionConfig",
      "type": "object"
    },
    "AutoConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "num_agents": {
          "default": 0,
          "title": "Num Agents",
          "type": "integer"
        },
        "layout": {
          "$ref": "#/$defs/AutoConfigLayout"
        },
        "grid": {
          "$ref": "#/$defs/AutoConfigGrid"
        },
        "bsp": {
          "$ref": "#/$defs/AutoConfigBSP"
        },
        "room_symmetry": {
          "$ref": "#/$defs/AutoConfigRoomSymmetry"
        },
        "content": {
          "items": {
            "$ref": "#/$defs/RandomSceneCandidate"
          },
          "title": "Content",
          "type": "array"
        },
        "objects": {
          "additionalProperties": {
            "$ref": "#/$defs/BaseFloatDistribution"
          },
          "title": "Objects",
          "type": "object"
        },
        "room_objects": {
          "additionalProperties": {
            "$ref": "#/$defs/BaseFloatDistribution"
          },
          "title": "Room Objects",
          "type": "object"
        }
      },
      "required": [
        "layout",
        "grid",
        "bsp",
        "room_symmetry",
        "content",
        "objects",
        "room_objects"
      ],
      "title": "AutoConfig",
      "type": "object"
    },
    "AutoConfigBSP": {
      "additionalProperties": false,
      "properties": {
        "area_count": {
          "$ref": "#/$defs/BaseIntDistribution"
        }
      },
      "required": [
        "area_count"
      ],
      "title": "AutoConfigBSP",
      "type": "object"
    },
    "AutoConfigGrid": {
      "additionalProperties": false,
      "properties": {
        "rows": {
          "$ref": "#/$defs/BaseIntDistribution"
        },
        "columns": {
          "$ref": "#/$defs/BaseIntDistribution"
        }
      },
      "required": [
        "rows",
        "columns"
      ],
      "title": "AutoConfigGrid",
      "type": "object"
    },
    "AutoConfigLayout": {
      "additionalProperties": false,
      "properties": {
        "grid": {
          "title": "Grid",
          "type": "integer"
        },
        "bsp": {
          "title": "Bsp",
          "type": "integer"
        }
      },
      "required": [
        "grid",
        "bsp"
      ],
      "title": "AutoConfigLayout",
      "type": "object"
    },
    "AutoConfigRoomSymmetry": {
      "additionalProperties": false,
      "properties": {
        "none": {
          "title": "None",
          "type": "integer"
        },
        "horizontal": {
          "title": "Horizontal",
          "type": "integer"
        },
        "vertical": {
          "title": "Vertical",
          "type": "integer"
        },
        "x4": {
          "title": "X4",
          "type": "integer"
        }
      },
      "required": [
        "none",
        "horizontal",
        "vertical",
        "x4"
      ],
      "title": "AutoConfigRoomSymmetry",
      "type": "object"
    },
    "AutoLayoutConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "auto_config": {
          "$ref": "#/$defs/AutoConfig"
        }
      },
      "required": [
        "auto_config"
      ],
      "title": "AutoLayoutConfig",
      "type": "object"
    },
    "AutoSymmetryConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "auto_config": {
          "$ref": "#/$defs/AutoConfig"
        }
      },
      "required": [
        "auto_config"
      ],
      "title": "AutoSymmetryConfig",
      "type": "object"
    },
    "BSPConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "rooms": {
          "title": "Rooms",
          "type": "integer"
        },
        "min_room_size": {
          "title": "Min Room Size",
          "type": "integer"
        },
        "min_room_size_ratio": {
          "title": "Min Room Size Ratio",
          "type": "number"
        },
        "max_room_size_ratio": {
          "title": "Max Room Size Ratio",
          "type": "number"
        },
        "skip_corridors": {
          "default": false,
          "title": "Skip Corridors",
          "type": "boolean"
        }
      },
      "required": [
        "rooms",
        "min_room_size",
        "min_room_size_ratio",
        "max_room_size_ratio"
      ],
      "title": "BSPConfig",
      "type": "object"
    },
    "BSPLayoutConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "area_count": {
          "title": "Area Count",
          "type": "integer"
        }
      },
      "required": [
        "area_count"
      ],
      "title": "BSPLayoutConfig",
      "type": "object"
    },
    "BaseConvChainConfig": {
      "additionalProperties": false,
      "properties": {
        "pattern": {
          "title": "Pattern",
          "type": "string"
        },
        "pattern_size": {
          "title": "Pattern Size",
          "type": "integer"
        },
        "iterations": {
          "title": "Iterations",
          "type": "integer"
        },
        "temperature": {
          "title": "Temperature",
          "type": "number"
        },
        "periodic_input": {
          "default": true,
          "title": "Periodic Input",
          "type": "boolean"
        },
        "symmetry": {
          "default": "all",
          "enum": [
            "all",
            "horizontal",
            "none"
          ],
          "title": "Symmetry",
          "type": "string"
        }
      },
      "required": [
        "pattern",
        "pattern_size",
        "iterations",
        "temperature"
      ],
      "title": "BaseConvChainConfig",
      "type": "object"
    },
    "BaseFloatDistribution": {
      "properties": {},
      "title": "BaseFloatDistribution",
      "type": "object"
    },
    "BaseIntDistribution": {
      "properties": {},
      "title": "BaseIntDistribution",
      "type": "object"
    },
    "ChangeGlyphActionConfig": {
      "additionalProperties": false,
      "description": "Change glyph action configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "required_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Required Resources",
          "type": "object"
        },
        "consumed_resources": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Consumed Resources",
          "type": "object"
        },
        "number_of_glyphs": {
          "default": 0,
          "maximum": 255,
          "minimum": 0,
          "title": "Number Of Glyphs",
          "type": "integer"
        }
      },
      "title": "ChangeGlyphActionConfig",
      "type": "object"
    },
    "CheckpointerConfig": {
      "additionalProperties": false,
      "description": "Configuration for policy checkpointing.",
      "properties": {
        "epoch_interval": {
          "default": 30,
          "minimum": 0,
          "title": "Epoch Interval",
          "type": "integer"
        }
      },
      "title": "CheckpointerConfig",
      "type": "object"
    },
    "ChestConfig": {
      "additionalProperties": false,
      "description": "Python chest configuration.",
      "properties": {
        "name": {
          "default": "",
          "description": "Object name (used for identification)",
          "title": "Name",
          "type": "string"
        },
        "type_id": {
          "description": "Numeric type ID for C++ runtime",
          "maximum": 255,
          "minimum": 0,
          "title": "Type Id",
          "type": "integer"
        },
        "map_char": {
          "default": "?",
          "description": "Character used in ASCII maps",
          "title": "Map Char",
          "type": "string"
        },
        "render_symbol": {
          "default": "\u2753",
          "description": "Symbol used for rendering (e.g., emoji)",
          "title": "Render Symbol",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this object instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "type": {
          "const": "chest",
          "default": "chest",
          "title": "Type",
          "type": "string"
        },
        "resource_type": {
          "description": "Resource type that this chest can store",
          "title": "Resource Type",
          "type": "string"
        },
        "position_deltas": {
          "description": "List of (position, delta) tuples. Positive delta = deposit, negative = withdraw (e.g., (E, 1) deposits 1, (N, -5) withdraws 5)",
          "items": {
            "maxItems": 2,
            "minItems": 2,
            "prefixItems": [
              {
                "enum": [
                  "NW",
                  "N",
                  "NE",
                  "W",
                  "E",
                  "SW",
                  "S",
                  "SE"
                ],
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "type": "array"
          },
          "title": "Position Deltas",
          "type": "array"
        },
        "initial_inventory": {
          "default": 0,
          "description": "Initial amount of resource_type in the chest",
          "minimum": 0,
          "title": "Initial Inventory",
          "type": "integer"
        },
        "max_inventory": {
          "default": 255,
          "description": "Maximum inventory (resources are destroyed when depositing beyond this, -1 = unlimited)",
          "minimum": -1,
          "title": "Max Inventory",
          "type": "integer"
        }
      },
      "required": [
        "type_id",
        "resource_type"
      ],
      "title": "ChestConfig",
      "type": "object"
    },
    "ChildrenAction": {
      "additionalProperties": false,
      "properties": {
        "limit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Limit"
        },
        "offset": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Offset"
        },
        "lock": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lock"
        },
        "where": {
          "anyOf": [
            {
              "const": "full",
              "type": "string"
            },
            {
              "$ref": "#/$defs/AreaWhere"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Where"
        },
        "order_by": {
          "default": "random",
          "enum": [
            "random",
            "first",
            "last"
          ],
          "title": "Order By",
          "type": "string"
        },
        "scene": {
          "$ref": "#/$defs/SceneConfig"
        }
      },
      "required": [
        "scene"
      ],
      "title": "ChildrenAction",
      "type": "object"
    },
    "ClipperConfig": {
      "additionalProperties": false,
      "description": "Global clipper that probabilistically clips assemblers each tick.\n\nThe clipper system uses a spatial diffusion process where clipping spreads\nbased on distance from already-clipped buildings. The length_scale parameter\ncontrols the exponential decay: weight = exp(-distance / length_scale).\n\nIf length_scale is <= 0 (default 0.0), it will be automatically calculated\nat runtime in C++ using percolation based on the actual grid size and\nnumber of buildings placed. Set length_scale > 0 to use a manual value instead.\n\nIf cutoff_distance is <= 0 (default 0.0), it will be automatically set to\n3 * length_scale at runtime. At this distance, exp(-3) \u2248 0.05, making weights\nnegligible. Set cutoff_distance > 0 to use a manual cutoff.",
      "properties": {
        "unclipping_recipes": {
          "items": {
            "$ref": "#/$defs/RecipeConfig"
          },
          "title": "Unclipping Recipes",
          "type": "array"
        },
        "length_scale": {
          "default": 0.0,
          "description": "Controls spatial spread rate: weight = exp(-distance / length_scale). If <= 0, automatically calculated using percolation at runtime.",
          "title": "Length Scale",
          "type": "number"
        },
        "cutoff_distance": {
          "default": 0.0,
          "description": "Maximum distance for infection weight calculations. If <= 0, automatically set to 3 * length_scale at runtime.",
          "minimum": 0.0,
          "title": "Cutoff Distance",
          "type": "number"
        },
        "clip_rate": {
          "default": 0.0,
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Clip Rate",
          "type": "number"
        }
      },
      "title": "ClipperConfig",
      "type": "object"
    },
    "ComponentConfig": {
      "additionalProperties": false,
      "description": "Abstract base class for component configurations.",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "ComponentConfig",
      "type": "object"
    },
    "ContextCheckpointerConfig": {
      "additionalProperties": false,
      "description": "Configuration for trainer state checkpointing.",
      "properties": {
        "epoch_interval": {
          "default": 50,
          "title": "Epoch Interval",
          "type": "integer"
        },
        "keep_last_n": {
          "default": 5,
          "title": "Keep Last N",
          "type": "integer"
        }
      },
      "title": "ContextCheckpointerConfig",
      "type": "object"
    },
    "ConvChainConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "pattern": {
          "title": "Pattern",
          "type": "string"
        },
        "pattern_size": {
          "title": "Pattern Size",
          "type": "integer"
        },
        "iterations": {
          "title": "Iterations",
          "type": "integer"
        },
        "temperature": {
          "title": "Temperature",
          "type": "number"
        },
        "periodic_input": {
          "default": true,
          "title": "Periodic Input",
          "type": "boolean"
        },
        "symmetry": {
          "default": "all",
          "enum": [
            "all",
            "horizontal",
            "none"
          ],
          "title": "Symmetry",
          "type": "string"
        }
      },
      "required": [
        "pattern",
        "pattern_size",
        "iterations",
        "temperature"
      ],
      "title": "ConvChainConfig",
      "type": "object"
    },
    "ConvChainSlowConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "pattern": {
          "title": "Pattern",
          "type": "string"
        },
        "pattern_size": {
          "title": "Pattern Size",
          "type": "integer"
        },
        "iterations": {
          "title": "Iterations",
          "type": "integer"
        },
        "temperature": {
          "title": "Temperature",
          "type": "number"
        },
        "periodic_input": {
          "default": true,
          "title": "Periodic Input",
          "type": "boolean"
        },
        "symmetry": {
          "default": "all",
          "enum": [
            "all",
            "horizontal",
            "none"
          ],
          "title": "Symmetry",
          "type": "string"
        }
      },
      "required": [
        "pattern",
        "pattern_size",
        "iterations",
        "temperature"
      ],
      "title": "ConvChainSlowConfig",
      "type": "object"
    },
    "ConverterConfig": {
      "additionalProperties": false,
      "description": "Python converter configuration.",
      "properties": {
        "name": {
          "default": "",
          "description": "Object name (used for identification)",
          "title": "Name",
          "type": "string"
        },
        "type_id": {
          "description": "Numeric type ID for C++ runtime",
          "maximum": 255,
          "minimum": 0,
          "title": "Type Id",
          "type": "integer"
        },
        "map_char": {
          "default": "?",
          "description": "Character used in ASCII maps",
          "title": "Map Char",
          "type": "string"
        },
        "render_symbol": {
          "default": "\u2753",
          "description": "Symbol used for rendering (e.g., emoji)",
          "title": "Render Symbol",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this object instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "type": {
          "const": "converter",
          "default": "converter",
          "title": "Type",
          "type": "string"
        },
        "input_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Input Resources",
          "type": "object"
        },
        "output_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Output Resources",
          "type": "object"
        },
        "max_output": {
          "default": 5,
          "minimum": -1,
          "title": "Max Output",
          "type": "integer"
        },
        "max_conversions": {
          "default": -1,
          "title": "Max Conversions",
          "type": "integer"
        },
        "conversion_ticks": {
          "default": 1,
          "minimum": 0,
          "title": "Conversion Ticks",
          "type": "integer"
        },
        "cooldown": {
          "minimum": 0,
          "title": "Cooldown",
          "type": "integer"
        },
        "initial_resource_count": {
          "default": 0,
          "minimum": 0,
          "title": "Initial Resource Count",
          "type": "integer"
        },
        "color": {
          "default": 0,
          "maximum": 255,
          "minimum": 0,
          "title": "Color",
          "type": "integer"
        }
      },
      "required": [
        "type_id",
        "cooldown"
      ],
      "title": "ConverterConfig",
      "type": "object"
    },
    "CopyGridConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        }
      },
      "title": "CopyGridConfig",
      "type": "object"
    },
    "CurriculumConfig": {
      "additionalProperties": false,
      "description": "Base configuration for Curriculum.",
      "properties": {
        "task_generator": {
          "$ref": "#/$defs/TaskGeneratorConfig_Any_",
          "description": "TaskGenerator configuration"
        },
        "max_task_id": {
          "default": 1000000,
          "description": "Maximum task ID to generate",
          "exclusiveMinimum": 0,
          "title": "Max Task Id",
          "type": "integer"
        },
        "num_active_tasks": {
          "default": 10000,
          "description": "Number of active tasks to maintain",
          "exclusiveMinimum": 0,
          "title": "Num Active Tasks",
          "type": "integer"
        },
        "min_presentations_for_eviction": {
          "default": 5,
          "description": "Minimum task presentations before eviction",
          "exclusiveMinimum": 0,
          "title": "Min Presentations For Eviction",
          "type": "integer"
        },
        "algorithm_config": {
          "anyOf": [
            {
              "$ref": "#/$defs/DiscreteRandomConfig"
            },
            {
              "$ref": "#/$defs/LearningProgressConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Curriculum algorithm hyperparameters",
          "title": "Algorithm Config"
        }
      },
      "required": [
        "task_generator"
      ],
      "title": "CurriculumConfig",
      "type": "object"
    },
    "DiscreteRandomConfig": {
      "additionalProperties": false,
      "description": "Hyperparameters for DiscreteRandomCurriculum.",
      "properties": {
        "type": {
          "default": "discrete_random",
          "title": "Type",
          "type": "string"
        },
        "initial_weights": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Initial Weights"
        }
      },
      "title": "DiscreteRandomConfig",
      "type": "object"
    },
    "EvaluatorConfig": {
      "additionalProperties": false,
      "description": "Configuration for evaluation.",
      "properties": {
        "epoch_interval": {
          "default": 100,
          "title": "Epoch Interval",
          "type": "integer"
        },
        "evaluate_local": {
          "default": true,
          "title": "Evaluate Local",
          "type": "boolean"
        },
        "evaluate_remote": {
          "default": false,
          "title": "Evaluate Remote",
          "type": "boolean"
        },
        "num_training_tasks": {
          "default": 2,
          "title": "Num Training Tasks",
          "type": "integer"
        },
        "simulations": {
          "items": {
            "$ref": "#/$defs/SimulationConfig"
          },
          "title": "Simulations",
          "type": "array"
        },
        "replay_dir": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Replay Dir"
        },
        "skip_git_check": {
          "default": false,
          "title": "Skip Git Check",
          "type": "boolean"
        },
        "git_hash": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Git Hash"
        }
      },
      "title": "EvaluatorConfig",
      "type": "object"
    },
    "GameConfig": {
      "additionalProperties": false,
      "description": "Python game configuration.",
      "properties": {
        "resource_names": {
          "default": [
            "ore_red",
            "ore_blue",
            "ore_green",
            "battery_red",
            "battery_blue",
            "battery_green",
            "heart",
            "armor",
            "laser",
            "blueprint"
          ],
          "items": {
            "type": "string"
          },
          "title": "Resource Names",
          "type": "array"
        },
        "num_agents": {
          "default": 24,
          "minimum": 1,
          "title": "Num Agents",
          "type": "integer"
        },
        "max_steps": {
          "default": 1000,
          "minimum": 0,
          "title": "Max Steps",
          "type": "integer"
        },
        "episode_truncates": {
          "default": false,
          "title": "Episode Truncates",
          "type": "boolean"
        },
        "obs_width": {
          "default": 11,
          "enum": [
            3,
            5,
            7,
            9,
            11,
            13,
            15
          ],
          "title": "Obs Width",
          "type": "integer"
        },
        "obs_height": {
          "default": 11,
          "enum": [
            3,
            5,
            7,
            9,
            11,
            13,
            15
          ],
          "title": "Obs Height",
          "type": "integer"
        },
        "num_observation_tokens": {
          "default": 200,
          "minimum": 1,
          "title": "Num Observation Tokens",
          "type": "integer"
        },
        "agent": {
          "$ref": "#/$defs/AgentConfig"
        },
        "agents": {
          "items": {
            "$ref": "#/$defs/AgentConfig"
          },
          "title": "Agents",
          "type": "array"
        },
        "actions": {
          "$ref": "#/$defs/ActionsConfig"
        },
        "global_obs": {
          "$ref": "#/$defs/GlobalObsConfig"
        },
        "objects": {
          "additionalProperties": {
            "discriminator": {
              "mapping": {
                "assembler": "#/$defs/AssemblerConfig",
                "chest": "#/$defs/ChestConfig",
                "converter": "#/$defs/ConverterConfig",
                "wall": "#/$defs/WallConfig"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/WallConfig"
              },
              {
                "$ref": "#/$defs/ConverterConfig"
              },
              {
                "$ref": "#/$defs/AssemblerConfig"
              },
              {
                "$ref": "#/$defs/ChestConfig"
              }
            ]
          },
          "title": "Objects",
          "type": "object"
        },
        "params": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Params"
        },
        "resource_loss_prob": {
          "default": 0.0,
          "description": "Probability of resource loss per step",
          "title": "Resource Loss Prob",
          "type": "number"
        },
        "inventory_regen_interval": {
          "default": 0,
          "description": "Interval in timesteps between regenerations (0 = disabled)",
          "minimum": 0,
          "title": "Inventory Regen Interval",
          "type": "integer"
        },
        "clipper": {
          "anyOf": [
            {
              "$ref": "#/$defs/ClipperConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Global clipper configuration"
        },
        "map_builder": {
          "$ref": "#/$defs/MapBuilderConfig_Any_",
          "default": {
            "type": "mettagrid.map_builder.random.RandomMapBuilder",
            "seed": null,
            "width": 10,
            "height": 10,
            "objects": {},
            "agents": 24,
            "border_width": 0,
            "border_object": "wall"
          }
        },
        "track_movement_metrics": {
          "default": true,
          "description": "Enable movement metrics tracking (sequential rotations)",
          "title": "Track Movement Metrics",
          "type": "boolean"
        },
        "recipe_details_obs": {
          "default": false,
          "description": "Converters show their recipe inputs and outputs when observed",
          "title": "Recipe Details Obs",
          "type": "boolean"
        },
        "allow_diagonals": {
          "default": false,
          "description": "Enable actions to be aware of diagonal orientations",
          "title": "Allow Diagonals",
          "type": "boolean"
        },
        "reward_estimates": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "number"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reward Estimates"
        }
      },
      "title": "GameConfig",
      "type": "object"
    },
    "GlobalObsConfig": {
      "additionalProperties": false,
      "description": "Global observation configuration.",
      "properties": {
        "episode_completion_pct": {
          "default": true,
          "title": "Episode Completion Pct",
          "type": "boolean"
        },
        "last_action": {
          "default": true,
          "title": "Last Action",
          "type": "boolean"
        },
        "last_reward": {
          "default": true,
          "title": "Last Reward",
          "type": "boolean"
        },
        "visitation_counts": {
          "default": false,
          "title": "Visitation Counts",
          "type": "boolean"
        }
      },
      "title": "GlobalObsConfig",
      "type": "object"
    },
    "GradientReporterConfig": {
      "additionalProperties": false,
      "description": "Configuration for gradient statistics computation.",
      "properties": {
        "epoch_interval": {
          "default": 0,
          "minimum": 0,
          "title": "Epoch Interval",
          "type": "integer"
        }
      },
      "title": "GradientReporterConfig",
      "type": "object"
    },
    "GridAltarsConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "objects": {
          "additionalProperties": {
            "type": "integer"
          },
          "default": {},
          "title": "Objects",
          "type": "object"
        },
        "agents": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            }
          ],
          "default": 0,
          "title": "Agents"
        },
        "grid_rows": {
          "default": 3,
          "title": "Grid Rows",
          "type": "integer"
        },
        "grid_cols": {
          "default": 3,
          "title": "Grid Cols",
          "type": "integer"
        },
        "margin": {
          "default": 5,
          "title": "Margin",
          "type": "integer"
        },
        "min_spacing": {
          "default": 9,
          "title": "Min Spacing",
          "type": "integer"
        },
        "randomize_position": {
          "default": 0,
          "title": "Randomize Position",
          "type": "integer"
        },
        "place_agent_center": {
          "default": true,
          "title": "Place Agent Center",
          "type": "boolean"
        }
      },
      "title": "GridAltarsConfig",
      "type": "object"
    },
    "GridTransform": {
      "enum": [
        "identity",
        "rot_90",
        "rot_180",
        "rot_270",
        "flip_h",
        "flip_v",
        "transpose",
        "transpose_alt"
      ],
      "title": "GridTransform",
      "type": "string"
    },
    "HeartbeatConfig": {
      "additionalProperties": false,
      "description": "Configuration for heartbeat monitoring.",
      "properties": {
        "epoch_interval": {
          "default": 1,
          "title": "Epoch Interval",
          "type": "integer"
        }
      },
      "title": "HeartbeatConfig",
      "type": "object"
    },
    "HorizontalMirrorConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "scene": {
          "$ref": "#/$defs/SceneConfig"
        }
      },
      "required": [
        "scene"
      ],
      "title": "HorizontalMirrorConfig",
      "type": "object"
    },
    "HyperparameterSchedulerConfig": {
      "additionalProperties": false,
      "description": "Scheduler settings applied during training.",
      "properties": {
        "enabled": {
          "default": false,
          "title": "Enabled",
          "type": "boolean"
        },
        "schedule_type": {
          "default": "exponential",
          "title": "Schedule Type",
          "type": "string"
        },
        "learning_rate_decay": {
          "default": 1.0,
          "title": "Learning Rate Decay",
          "type": "number"
        },
        "ppo_clip_decay": {
          "default": 1.0,
          "title": "Ppo Clip Decay",
          "type": "number"
        },
        "ppo_ent_coef_decay": {
          "default": 1.0,
          "title": "Ppo Ent Coef Decay",
          "type": "number"
        }
      },
      "title": "HyperparameterSchedulerConfig",
      "type": "object"
    },
    "InitialPolicyConfig": {
      "additionalProperties": false,
      "properties": {
        "uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Uri"
        },
        "type": {
          "default": "top",
          "enum": [
            "top",
            "latest",
            "specific"
          ],
          "title": "Type",
          "type": "string"
        },
        "range": {
          "default": 1,
          "exclusiveMinimum": 0,
          "title": "Range",
          "type": "integer"
        },
        "metric": {
          "default": "epoch",
          "title": "Metric",
          "type": "string"
        },
        "filters": {
          "additionalProperties": true,
          "title": "Filters",
          "type": "object"
        }
      },
      "title": "InitialPolicyConfig",
      "type": "object"
    },
    "InlineAsciiConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "data": {
          "title": "Data",
          "type": "string"
        },
        "row": {
          "default": 0,
          "title": "Row",
          "type": "integer"
        },
        "column": {
          "default": 0,
          "title": "Column",
          "type": "integer"
        },
        "char_to_name": {
          "additionalProperties": {
            "type": "string"
          },
          "title": "Char To Name",
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "title": "InlineAsciiConfig",
      "type": "object"
    },
    "InnerMirrorConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "scene": {
          "$ref": "#/$defs/SceneConfig"
        }
      },
      "required": [
        "scene"
      ],
      "title": "InnerMirrorConfig",
      "type": "object"
    },
    "LayoutArea": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "width": {
          "title": "Width",
          "type": "integer"
        },
        "height": {
          "title": "Height",
          "type": "integer"
        },
        "placement": {
          "const": "center",
          "default": "center",
          "title": "Placement",
          "type": "string"
        },
        "tag": {
          "title": "Tag",
          "type": "string"
        }
      },
      "required": [
        "width",
        "height",
        "tag"
      ],
      "title": "LayoutArea",
      "type": "object"
    },
    "LayoutConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "areas": {
          "items": {
            "$ref": "#/$defs/LayoutArea"
          },
          "title": "Areas",
          "type": "array"
        }
      },
      "required": [
        "areas"
      ],
      "title": "LayoutConfig",
      "type": "object"
    },
    "LearningProgressConfig": {
      "additionalProperties": false,
      "description": "Configuration for learning progress with bidirectional scoring as default.",
      "properties": {
        "type": {
          "default": "learning_progress",
          "title": "Type",
          "type": "string"
        },
        "initial_weights": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Initial Weights"
        },
        "use_bidirectional": {
          "default": true,
          "title": "Use Bidirectional",
          "type": "boolean"
        },
        "ema_timescale": {
          "default": 0.001,
          "title": "Ema Timescale",
          "type": "number"
        },
        "exploration_bonus": {
          "default": 0.1,
          "title": "Exploration Bonus",
          "type": "number"
        },
        "progress_smoothing": {
          "default": 0.05,
          "title": "Progress Smoothing",
          "type": "number"
        },
        "num_active_tasks": {
          "default": 16,
          "title": "Num Active Tasks",
          "type": "integer"
        },
        "rand_task_rate": {
          "default": 0.25,
          "title": "Rand Task Rate",
          "type": "number"
        },
        "sample_threshold": {
          "default": 10,
          "title": "Sample Threshold",
          "type": "integer"
        },
        "memory": {
          "default": 25,
          "title": "Memory",
          "type": "integer"
        },
        "max_memory_tasks": {
          "default": 1000,
          "title": "Max Memory Tasks",
          "type": "integer"
        },
        "max_slice_axes": {
          "default": 3,
          "title": "Max Slice Axes",
          "type": "integer"
        },
        "enable_detailed_slice_logging": {
          "default": false,
          "title": "Enable Detailed Slice Logging",
          "type": "boolean"
        }
      },
      "title": "LearningProgressConfig",
      "type": "object"
    },
    "LossConfig": {
      "additionalProperties": false,
      "properties": {
        "loss_configs": {
          "additionalProperties": true,
          "title": "Loss Configs",
          "type": "object"
        }
      },
      "title": "LossConfig",
      "type": "object"
    },
    "MakeConnectedConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        }
      },
      "title": "MakeConnectedConfig",
      "type": "object"
    },
    "MapBuilderConfig_Any_": {
      "additionalProperties": false,
      "properties": {},
      "title": "MapBuilderConfig[Any]",
      "type": "object"
    },
    "MazeConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "algorithm": {
          "default": "kruskal",
          "enum": [
            "kruskal",
            "dfs"
          ],
          "title": "Algorithm",
          "type": "string"
        },
        "room_size": {
          "$ref": "#/$defs/BaseIntDistribution",
          "default": {
            "value": 1
          }
        },
        "wall_size": {
          "$ref": "#/$defs/BaseIntDistribution",
          "default": {
            "value": 1
          }
        }
      },
      "title": "MazeConfig",
      "type": "object"
    },
    "MeanDistanceConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "mean_distance": {
          "title": "Mean Distance",
          "type": "number"
        },
        "objects": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Objects",
          "type": "object"
        }
      },
      "required": [
        "mean_distance",
        "objects"
      ],
      "title": "MeanDistanceConfig",
      "type": "object"
    },
    "MettaGridConfig": {
      "additionalProperties": false,
      "description": "Environment configuration.",
      "properties": {
        "label": {
          "default": "mettagrid",
          "title": "Label",
          "type": "string"
        },
        "game": {
          "$ref": "#/$defs/GameConfig"
        },
        "desync_episodes": {
          "default": true,
          "title": "Desync Episodes",
          "type": "boolean"
        }
      },
      "title": "MettaGridConfig",
      "type": "object"
    },
    "MirrorConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "scene": {
          "$ref": "#/$defs/SceneConfig"
        },
        "symmetry": {
          "default": "horizontal",
          "enum": [
            "horizontal",
            "vertical",
            "x4"
          ],
          "title": "Symmetry",
          "type": "string"
        }
      },
      "required": [
        "scene"
      ],
      "title": "MirrorConfig",
      "type": "object"
    },
    "MirroredConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "flip_x": {
          "default": false,
          "title": "Flip X",
          "type": "boolean"
        },
        "flip_y": {
          "default": false,
          "title": "Flip Y",
          "type": "boolean"
        }
      },
      "title": "MirroredConfig",
      "type": "object"
    },
    "MultiLeftAndRightConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "rows": {
          "title": "Rows",
          "type": "integer"
        },
        "columns": {
          "title": "Columns",
          "type": "integer"
        },
        "altar_ratio": {
          "title": "Altar Ratio",
          "type": "number"
        },
        "total_altars": {
          "title": "Total Altars",
          "type": "integer"
        }
      },
      "required": [
        "rows",
        "columns",
        "altar_ratio",
        "total_altars"
      ],
      "title": "MultiLeftAndRightConfig",
      "type": "object"
    },
    "NopConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        }
      },
      "title": "NopConfig",
      "type": "object"
    },
    "OptimizerConfig": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "default": "adam",
          "enum": [
            "adam",
            "muon"
          ],
          "title": "Type",
          "type": "string"
        },
        "learning_rate": {
          "default": 0.001153637,
          "exclusiveMinimum": 0,
          "maximum": 1.0,
          "title": "Learning Rate",
          "type": "number"
        },
        "beta1": {
          "default": 0.9,
          "maximum": 1.0,
          "minimum": 0,
          "title": "Beta1",
          "type": "number"
        },
        "beta2": {
          "default": 0.999,
          "maximum": 1.0,
          "minimum": 0,
          "title": "Beta2",
          "type": "number"
        },
        "eps": {
          "default": 3.186531e-07,
          "exclusiveMinimum": 0,
          "title": "Eps",
          "type": "number"
        },
        "weight_decay": {
          "default": 0,
          "minimum": 0,
          "title": "Weight Decay",
          "type": "number"
        }
      },
      "title": "OptimizerConfig",
      "type": "object"
    },
    "PlayTool": {
      "additionalProperties": false,
      "properties": {
        "system": {
          "$ref": "#/$defs/SystemConfig"
        },
        "wandb": {
          "$ref": "#/$defs/WandbConfig",
          "default": {
            "enabled": true,
            "project": "metta",
            "entity": "metta-research",
            "group": null,
            "name": null,
            "run_id": null,
            "data_dir": null,
            "job_type": null,
            "tags": [],
            "notes": ""
          }
        },
        "sim": {
          "$ref": "#/$defs/SimulationConfig"
        },
        "policy_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Policy Uri"
        },
        "replay_dir": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Replay Dir"
        },
        "stats_dir": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stats Dir"
        },
        "open_browser_on_start": {
          "default": true,
          "title": "Open Browser On Start",
          "type": "boolean"
        },
        "mettascope2": {
          "default": false,
          "title": "Mettascope2",
          "type": "boolean"
        }
      },
      "required": [
        "sim"
      ],
      "title": "PlayTool",
      "type": "object"
    },
    "PolicyArchitecture": {
      "additionalProperties": false,
      "description": "Policy architecture configuration.",
      "properties": {
        "class_path": {
          "title": "Class Path",
          "type": "string"
        },
        "components": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ComponentConfig"
          },
          "title": "Components",
          "type": "array"
        },
        "action_probs_config": {
          "$ref": "#/$defs/ComponentConfig"
        }
      },
      "required": [
        "class_path",
        "action_probs_config"
      ],
      "title": "PolicyArchitecture",
      "type": "object"
    },
    "RadialMazeConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "arms": {
          "default": 4,
          "maximum": 12,
          "minimum": 4,
          "title": "Arms",
          "type": "integer"
        },
        "arm_width": {
          "default": 4,
          "minimum": 1,
          "title": "Arm Width",
          "type": "integer"
        },
        "arm_length": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Arm Length"
        }
      },
      "title": "RadialMazeConfig",
      "type": "object"
    },
    "RandomConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "objects": {
          "additionalProperties": {
            "type": "integer"
          },
          "default": {},
          "title": "Objects",
          "type": "object"
        },
        "agents": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            }
          ],
          "default": 0,
          "title": "Agents"
        },
        "too_many_is_ok": {
          "default": true,
          "title": "Too Many Is Ok",
          "type": "boolean"
        }
      },
      "title": "RandomConfig",
      "type": "object"
    },
    "RandomDcssSceneConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "wfc": {
          "title": "Wfc",
          "type": "boolean"
        },
        "dcss": {
          "title": "Dcss",
          "type": "boolean"
        }
      },
      "required": [
        "wfc",
        "dcss"
      ],
      "title": "RandomDcssSceneConfig",
      "type": "object"
    },
    "RandomObjectsConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "object_ranges": {
          "additionalProperties": {
            "$ref": "#/$defs/BaseFloatDistribution"
          },
          "default": {},
          "title": "Object Ranges",
          "type": "object"
        }
      },
      "title": "RandomObjectsConfig",
      "type": "object"
    },
    "RandomSceneCandidate": {
      "additionalProperties": false,
      "properties": {
        "scene": {
          "$ref": "#/$defs/SceneConfig"
        },
        "weight": {
          "default": 1,
          "title": "Weight",
          "type": "number"
        }
      },
      "required": [
        "scene"
      ],
      "title": "RandomSceneCandidate",
      "type": "object"
    },
    "RandomSceneConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "candidates": {
          "items": {
            "$ref": "#/$defs/RandomSceneCandidate"
          },
          "title": "Candidates",
          "type": "array"
        }
      },
      "required": [
        "candidates"
      ],
      "title": "RandomSceneConfig",
      "type": "object"
    },
    "RandomYamlSceneCandidate": {
      "additionalProperties": false,
      "properties": {
        "scene_file": {
          "title": "Scene File",
          "type": "string"
        },
        "weight": {
          "default": 1,
          "title": "Weight",
          "type": "number"
        }
      },
      "required": [
        "scene_file"
      ],
      "title": "RandomYamlSceneCandidate",
      "type": "object"
    },
    "RandomYamlSceneConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "candidates": {
          "items": {
            "$ref": "#/$defs/RandomYamlSceneCandidate"
          },
          "title": "Candidates",
          "type": "array"
        }
      },
      "required": [
        "candidates"
      ],
      "title": "RandomYamlSceneConfig",
      "type": "object"
    },
    "RecipeConfig": {
      "additionalProperties": false,
      "properties": {
        "input_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Input Resources",
          "type": "object"
        },
        "output_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Output Resources",
          "type": "object"
        },
        "cooldown": {
          "default": 0,
          "minimum": 0,
          "title": "Cooldown",
          "type": "integer"
        }
      },
      "title": "RecipeConfig",
      "type": "object"
    },
    "RemoveAgentsConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        }
      },
      "title": "RemoveAgentsConfig",
      "type": "object"
    },
    "ReplayTool": {
      "additionalProperties": false,
      "description": "Tool for generating and viewing replay files in MettaScope.\nCreates a simulation specifically to generate replay files and automatically\nopens them in a browser for visualization. This tool focuses on replay viewing\nand browser integration, unlike SimTool which focuses on policy evaluation.",
      "properties": {
        "system": {
          "$ref": "#/$defs/SystemConfig"
        },
        "wandb": {
          "$ref": "#/$defs/WandbConfig",
          "default": {
            "enabled": true,
            "project": "metta",
            "entity": "metta-research",
            "group": null,
            "name": null,
            "run_id": null,
            "data_dir": null,
            "job_type": null,
            "tags": [],
            "notes": ""
          }
        },
        "sim": {
          "$ref": "#/$defs/SimulationConfig"
        },
        "policy_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Policy Uri"
        },
        "replay_dir": {
          "default": "./train_dir/replays",
          "title": "Replay Dir",
          "type": "string"
        },
        "stats_dir": {
          "default": "./train_dir/stats",
          "title": "Stats Dir",
          "type": "string"
        },
        "open_browser_on_start": {
          "default": true,
          "title": "Open Browser On Start",
          "type": "boolean"
        }
      },
      "required": [
        "sim"
      ],
      "title": "ReplayTool",
      "type": "object"
    },
    "ResourceModActionConfig": {
      "additionalProperties": false,
      "description": "Resource mod action configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "required_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Required Resources",
          "type": "object"
        },
        "consumed_resources": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Consumed Resources",
          "type": "object"
        },
        "modifies": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Modifies",
          "type": "object"
        },
        "agent_radius": {
          "default": 0,
          "maximum": 255,
          "minimum": 0,
          "title": "Agent Radius",
          "type": "integer"
        },
        "converter_radius": {
          "default": 0,
          "maximum": 255,
          "minimum": 0,
          "title": "Converter Radius",
          "type": "integer"
        },
        "scales": {
          "default": false,
          "title": "Scales",
          "type": "boolean"
        }
      },
      "title": "ResourceModActionConfig",
      "type": "object"
    },
    "RoomGridConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "rows": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rows"
        },
        "columns": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Columns"
        },
        "layout": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Layout"
        },
        "border_width": {
          "default": 5,
          "title": "Border Width",
          "type": "integer"
        },
        "border_object": {
          "default": "wall",
          "title": "Border Object",
          "type": "string"
        }
      },
      "title": "RoomGridConfig",
      "type": "object"
    },
    "SceneConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        }
      },
      "title": "SceneConfig",
      "type": "object"
    },
    "SimTool": {
      "additionalProperties": false,
      "description": "Tool for running policy evaluations on simulation suites.\n\nCan evaluate policies specified either by:\n- run: Training run name (automatically resolves to latest S3 checkpoint)\n- policy_uris: Explicit list of policy URIs (file://, s3://, etc.)\n\nUsage examples:\n    # Evaluate latest checkpoint from a training run\n    SimTool(simulations=my_sims, run=\"my_experiment_2024\")\n\n    # Evaluate specific policy URIs\n    SimTool(simulations=my_sims, policy_uris=[\"s3://bucket/path/policy:v10.pt\"])\n\n    # Can also be invoked with run parameter\n    tool.invoke({\"run\": \"my_experiment_2024\"})",
      "properties": {
        "system": {
          "$ref": "#/$defs/SystemConfig"
        },
        "simulations": {
          "items": {
            "$ref": "#/$defs/SimulationConfig"
          },
          "title": "Simulations",
          "type": "array"
        },
        "policy_uris": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Policy Uris"
        },
        "replay_dir": {
          "default": "s3://softmax-public/replays/84498972-2199-4c87-8f96-d7c86470cd0e",
          "title": "Replay Dir",
          "type": "string"
        },
        "group": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Group"
        },
        "stats_dir": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stats Dir"
        },
        "stats_db_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stats Db Uri"
        },
        "stats_server_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stats Server Uri"
        },
        "register_missing_policies": {
          "default": false,
          "title": "Register Missing Policies",
          "type": "boolean"
        },
        "eval_task_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Eval Task Id"
        },
        "push_metrics_to_wandb": {
          "default": false,
          "title": "Push Metrics To Wandb",
          "type": "boolean"
        }
      },
      "required": [
        "simulations"
      ],
      "title": "SimTool",
      "type": "object"
    },
    "SimulationConfig": {
      "additionalProperties": false,
      "description": "Configuration for a single simulation run.",
      "properties": {
        "suite": {
          "description": "Name of the simulation suite",
          "title": "Suite",
          "type": "string"
        },
        "name": {
          "description": "Name of the simulation",
          "title": "Name",
          "type": "string"
        },
        "env": {
          "$ref": "#/$defs/MettaGridConfig"
        },
        "num_episodes": {
          "default": 1,
          "description": "Number of episodes to run",
          "minimum": 1,
          "title": "Num Episodes",
          "type": "integer"
        },
        "max_time_s": {
          "default": 120,
          "description": "Maximum time in seconds to run the simulation",
          "minimum": 0,
          "title": "Max Time S",
          "type": "integer"
        },
        "npc_policy_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "URI of the policy to use for NPC agents",
          "title": "Npc Policy Uri"
        },
        "policy_agents_pct": {
          "default": 1.0,
          "description": "pct of agents to be controlled by policies",
          "maximum": 1,
          "minimum": 0,
          "title": "Policy Agents Pct",
          "type": "number"
        },
        "episode_tags": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Tags to add to each episode",
          "title": "Episode Tags"
        }
      },
      "required": [
        "suite",
        "name",
        "env"
      ],
      "title": "SimulationConfig",
      "type": "object"
    },
    "SpiralConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "objects": {
          "additionalProperties": {
            "type": "integer"
          },
          "default": {},
          "title": "Objects",
          "type": "object"
        },
        "agents": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            }
          ],
          "default": 0,
          "title": "Agents"
        },
        "spacing": {
          "default": 15,
          "title": "Spacing",
          "type": "integer"
        },
        "start_radius": {
          "default": 0,
          "title": "Start Radius",
          "type": "integer"
        },
        "radius_increment": {
          "default": 2.5,
          "title": "Radius Increment",
          "type": "number"
        },
        "angle_increment": {
          "default": 0.3,
          "title": "Angle Increment",
          "type": "number"
        },
        "randomize_position": {
          "default": 2,
          "title": "Randomize Position",
          "type": "integer"
        },
        "place_at_center": {
          "default": true,
          "title": "Place At Center",
          "type": "boolean"
        }
      },
      "title": "SpiralConfig",
      "type": "object"
    },
    "StatsReporterConfig": {
      "additionalProperties": false,
      "description": "Configuration for stats reporting.",
      "properties": {
        "report_to_wandb": {
          "default": true,
          "title": "Report To Wandb",
          "type": "boolean"
        },
        "report_to_stats_client": {
          "default": true,
          "title": "Report To Stats Client",
          "type": "boolean"
        },
        "report_to_console": {
          "default": true,
          "title": "Report To Console",
          "type": "boolean"
        },
        "grad_mean_variance_interval": {
          "default": 50,
          "title": "Grad Mean Variance Interval",
          "type": "integer"
        },
        "interval": {
          "default": 1,
          "title": "Interval",
          "type": "integer"
        },
        "analyze_weights_interval": {
          "default": 0,
          "title": "Analyze Weights Interval",
          "type": "integer"
        }
      },
      "title": "StatsReporterConfig",
      "type": "object"
    },
    "SystemConfig": {
      "additionalProperties": false,
      "properties": {
        "vectorization": {
          "enum": [
            "serial",
            "multiprocessing"
          ],
          "title": "Vectorization",
          "type": "string"
        },
        "seed": {
          "title": "Seed",
          "type": "integer"
        },
        "torch_deterministic": {
          "default": true,
          "title": "Torch Deterministic",
          "type": "boolean"
        },
        "device": {
          "title": "Device",
          "type": "string"
        },
        "data_dir": {
          "format": "path",
          "title": "Data Dir",
          "type": "string"
        },
        "remote_prefix": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Remote Prefix"
        },
        "local_only": {
          "default": false,
          "title": "Local Only",
          "type": "boolean"
        },
        "nccl_timeout": {
          "default": "PT10M",
          "format": "duration",
          "title": "Nccl Timeout",
          "type": "string"
        }
      },
      "title": "SystemConfig",
      "type": "object"
    },
    "TaskGeneratorConfig_Any_": {
      "additionalProperties": false,
      "properties": {
        "label": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Label for the task generator",
          "title": "Label"
        },
        "overrides": {
          "additionalProperties": true,
          "description": "Overrides to apply as dict with dot-separated keys",
          "title": "Overrides",
          "type": "object"
        }
      },
      "title": "TaskGeneratorConfig[Any]",
      "type": "object"
    },
    "TorchProfilerConfig": {
      "additionalProperties": false,
      "properties": {
        "interval_epochs": {
          "default": 0,
          "minimum": 0,
          "title": "Interval Epochs",
          "type": "integer"
        },
        "profile_dir": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Profile Dir"
        }
      },
      "title": "TorchProfilerConfig",
      "type": "object"
    },
    "TrainTool": {
      "additionalProperties": false,
      "properties": {
        "system": {
          "$ref": "#/$defs/SystemConfig"
        },
        "run": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Run"
        },
        "trainer": {
          "$ref": "#/$defs/TrainerConfig"
        },
        "training_env": {
          "$ref": "#/$defs/TrainingEnvironmentConfig"
        },
        "policy_architecture": {
          "$ref": "#/$defs/PolicyArchitecture"
        },
        "initial_policy_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Initial Policy Uri"
        },
        "uploader": {
          "$ref": "#/$defs/UploaderConfig"
        },
        "checkpointer": {
          "$ref": "#/$defs/CheckpointerConfig"
        },
        "gradient_reporter": {
          "$ref": "#/$defs/GradientReporterConfig"
        },
        "stats_server_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "https://api.observatory.softmax-research.net",
          "title": "Stats Server Uri"
        },
        "wandb": {
          "$ref": "#/$defs/WandbConfig",
          "default": {
            "enabled": false,
            "project": "unconfigured",
            "entity": "unconfigured",
            "group": null,
            "name": null,
            "run_id": null,
            "data_dir": null,
            "job_type": null,
            "tags": [],
            "notes": ""
          }
        },
        "group": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Group"
        },
        "evaluator": {
          "$ref": "#/$defs/EvaluatorConfig"
        },
        "torch_profiler": {
          "$ref": "#/$defs/TorchProfilerConfig"
        },
        "context_checkpointer": {
          "$ref": "#/$defs/ContextCheckpointerConfig"
        },
        "stats_reporter": {
          "$ref": "#/$defs/StatsReporterConfig"
        },
        "wandb_aborter": {
          "$ref": "#/$defs/WandbAborterConfig"
        },
        "map_preview_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Map Preview Uri"
        },
        "disable_macbook_optimize": {
          "default": false,
          "title": "Disable Macbook Optimize",
          "type": "boolean"
        }
      },
      "required": [
        "training_env"
      ],
      "title": "TrainTool",
      "type": "object"
    },
    "TrainerConfig": {
      "additionalProperties": false,
      "properties": {
        "total_timesteps": {
          "default": 50000000000,
          "exclusiveMinimum": 0,
          "title": "Total Timesteps",
          "type": "integer"
        },
        "losses": {
          "$ref": "#/$defs/LossConfig"
        },
        "optimizer": {
          "$ref": "#/$defs/OptimizerConfig"
        },
        "require_contiguous_env_ids": {
          "default": false,
          "title": "Require Contiguous Env Ids",
          "type": "boolean"
        },
        "verbose": {
          "default": true,
          "title": "Verbose",
          "type": "boolean"
        },
        "batch_size": {
          "default": 524288,
          "exclusiveMinimum": 0,
          "title": "Batch Size",
          "type": "integer"
        },
        "minibatch_size": {
          "default": 16384,
          "exclusiveMinimum": 0,
          "title": "Minibatch Size",
          "type": "integer"
        },
        "bptt_horizon": {
          "default": 64,
          "exclusiveMinimum": 0,
          "title": "Bptt Horizon",
          "type": "integer"
        },
        "update_epochs": {
          "default": 1,
          "exclusiveMinimum": 0,
          "title": "Update Epochs",
          "type": "integer"
        },
        "scale_batches_by_world_size": {
          "default": false,
          "title": "Scale Batches By World Size",
          "type": "boolean"
        },
        "compile": {
          "default": false,
          "title": "Compile",
          "type": "boolean"
        },
        "compile_mode": {
          "default": "reduce-overhead",
          "enum": [
            "default",
            "reduce-overhead",
            "max-autotune"
          ],
          "title": "Compile Mode",
          "type": "string"
        },
        "hyperparameter_scheduler": {
          "$ref": "#/$defs/HyperparameterSchedulerConfig"
        },
        "heartbeat": {
          "anyOf": [
            {
              "$ref": "#/$defs/HeartbeatConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "initial_policy": {
          "$ref": "#/$defs/InitialPolicyConfig"
        },
        "profiler": {
          "$ref": "#/$defs/TorchProfilerConfig"
        }
      },
      "title": "TrainerConfig",
      "type": "object"
    },
    "TrainingEnvironmentConfig": {
      "additionalProperties": false,
      "description": "Configuration for training environment.",
      "properties": {
        "curriculum": {
          "$ref": "#/$defs/CurriculumConfig",
          "default": {
            "task_generator": {
              "env": {
                "desync_episodes": true,
                "game": {
                  "actions": {
                    "attack": {
                      "consumed_resources": {
                        "laser": 1.0
                      },
                      "defense_resources": {
                        "armor": 1
                      },
                      "enabled": true,
                      "required_resources": {}
                    },
                    "change_color": {
                      "consumed_resources": {},
                      "enabled": false,
                      "required_resources": {}
                    },
                    "change_glyph": {
                      "consumed_resources": {},
                      "enabled": false,
                      "number_of_glyphs": 0,
                      "required_resources": {}
                    },
                    "get_items": {
                      "consumed_resources": {},
                      "enabled": true,
                      "required_resources": {}
                    },
                    "move": {
                      "consumed_resources": {},
                      "enabled": true,
                      "required_resources": {}
                    },
                    "noop": {
                      "consumed_resources": {},
                      "enabled": true,
                      "required_resources": {}
                    },
                    "put_items": {
                      "consumed_resources": {},
                      "enabled": true,
                      "required_resources": {}
                    },
                    "resource_mod": {
                      "agent_radius": 0,
                      "consumed_resources": {},
                      "converter_radius": 0,
                      "enabled": false,
                      "modifies": {},
                      "required_resources": {},
                      "scales": false
                    },
                    "rotate": {
                      "consumed_resources": {},
                      "enabled": false,
                      "required_resources": {}
                    },
                    "swap": {
                      "consumed_resources": {},
                      "enabled": false,
                      "required_resources": {}
                    }
                  },
                  "agent": {
                    "action_failure_penalty": 0.0,
                    "default_resource_limit": 50,
                    "freeze_duration": 10,
                    "initial_inventory": {},
                    "inventory_regen_amounts": {},
                    "resource_limits": {
                      "heart": 255
                    },
                    "rewards": {
                      "inventory": {
                        "heart": 1.0
                      },
                      "inventory_max": {},
                      "stats": {},
                      "stats_max": {}
                    },
                    "shareable_resources": [],
                    "soul_bound_resources": [],
                    "tags": [],
                    "team_id": 0
                  },
                  "agents": [],
                  "allow_diagonals": false,
                  "clipper": null,
                  "episode_truncates": false,
                  "global_obs": {
                    "episode_completion_pct": true,
                    "last_action": true,
                    "last_reward": true,
                    "visitation_counts": false
                  },
                  "inventory_regen_interval": 0,
                  "map_builder": {
                    "border_width": 6,
                    "height": 25,
                    "instance": {
                      "agents": 6,
                      "children": [],
                      "objects": {
                        "altar": 5,
                        "armory": 1,
                        "generator_red": 5,
                        "lasery": 1,
                        "mine_red": 10,
                        "wall": 10
                      },
                      "seed": null,
                      "too_many_is_ok": true,
                      "transform": "identity",
                      "type": "mettagrid.mapgen.scenes.random.Random"
                    },
                    "instance_border_width": 0,
                    "instance_map": null,
                    "instances": null,
                    "num_agents": 24,
                    "root": null,
                    "seed": null,
                    "type": "mettagrid.mapgen.mapgen.MapGen",
                    "width": 25
                  },
                  "max_steps": 1000,
                  "num_agents": 24,
                  "num_observation_tokens": 200,
                  "objects": {
                    "altar": {
                      "color": 0,
                      "conversion_ticks": 1,
                      "cooldown": 10,
                      "initial_resource_count": 0,
                      "input_resources": {
                        "battery_red": 3
                      },
                      "map_char": "_",
                      "max_conversions": -1,
                      "max_output": 5,
                      "name": "altar",
                      "output_resources": {
                        "heart": 1
                      },
                      "render_symbol": "\ud83c\udfaf",
                      "tags": [],
                      "type": "converter",
                      "type_id": 8
                    },
                    "armory": {
                      "color": 0,
                      "conversion_ticks": 1,
                      "cooldown": 10,
                      "initial_resource_count": 0,
                      "input_resources": {
                        "ore_red": 3
                      },
                      "map_char": "o",
                      "max_conversions": -1,
                      "max_output": 5,
                      "name": "armory",
                      "output_resources": {
                        "armor": 1
                      },
                      "render_symbol": "\ud83d\udd35",
                      "tags": [],
                      "type": "converter",
                      "type_id": 16
                    },
                    "generator_red": {
                      "color": 0,
                      "conversion_ticks": 1,
                      "cooldown": 25,
                      "initial_resource_count": 0,
                      "input_resources": {
                        "ore_red": 1
                      },
                      "map_char": "n",
                      "max_conversions": -1,
                      "max_output": 5,
                      "name": "generator_red",
                      "output_resources": {
                        "battery_red": 1
                      },
                      "render_symbol": "\ud83d\udd0b",
                      "tags": [],
                      "type": "converter",
                      "type_id": 5
                    },
                    "lasery": {
                      "color": 0,
                      "conversion_ticks": 1,
                      "cooldown": 10,
                      "initial_resource_count": 0,
                      "input_resources": {
                        "battery_red": 1,
                        "ore_red": 2
                      },
                      "map_char": "S",
                      "max_conversions": -1,
                      "max_output": 5,
                      "name": "lasery",
                      "output_resources": {
                        "laser": 1
                      },
                      "render_symbol": "\ud83d\udfe5",
                      "tags": [],
                      "type": "converter",
                      "type_id": 15
                    },
                    "mine_red": {
                      "color": 0,
                      "conversion_ticks": 1,
                      "cooldown": 50,
                      "initial_resource_count": 0,
                      "input_resources": {},
                      "map_char": "m",
                      "max_conversions": -1,
                      "max_output": 5,
                      "name": "mine_red",
                      "output_resources": {
                        "ore_red": 1
                      },
                      "render_symbol": "\ud83d\udd3a",
                      "tags": [],
                      "type": "converter",
                      "type_id": 2
                    },
                    "wall": {
                      "map_char": "#",
                      "name": "wall",
                      "render_symbol": "\u2b1b",
                      "swappable": false,
                      "tags": [],
                      "type": "wall",
                      "type_id": 1
                    }
                  },
                  "obs_height": 11,
                  "obs_width": 11,
                  "params": null,
                  "recipe_details_obs": false,
                  "resource_loss_prob": 0.0,
                  "resource_names": [
                    "ore_red",
                    "ore_blue",
                    "ore_green",
                    "battery_red",
                    "battery_blue",
                    "battery_green",
                    "heart",
                    "armor",
                    "laser",
                    "blueprint"
                  ],
                  "reward_estimates": null,
                  "track_movement_metrics": true
                },
                "label": "arena.combat"
              },
              "label": null,
              "overrides": {},
              "type": "metta.cogworks.curriculum.task_generator.SingleTaskGenerator"
            },
            "max_task_id": 1000000,
            "num_active_tasks": 10000,
            "min_presentations_for_eviction": 5,
            "algorithm_config": null
          }
        },
        "num_workers": {
          "default": 1,
          "minimum": 1,
          "title": "Num Workers",
          "type": "integer"
        },
        "async_factor": {
          "default": 2,
          "minimum": 1,
          "title": "Async Factor",
          "type": "integer"
        },
        "auto_workers": {
          "default": true,
          "title": "Auto Workers",
          "type": "boolean"
        },
        "forward_pass_minibatch_target_size": {
          "default": 4096,
          "exclusiveMinimum": 0,
          "title": "Forward Pass Minibatch Target Size",
          "type": "integer"
        },
        "zero_copy": {
          "default": true,
          "title": "Zero Copy",
          "type": "boolean"
        },
        "vectorization": {
          "enum": [
            "serial",
            "multiprocessing"
          ],
          "title": "Vectorization",
          "type": "string"
        },
        "seed": {
          "default": 0,
          "title": "Seed",
          "type": "integer"
        }
      },
      "title": "TrainingEnvironmentConfig",
      "type": "object"
    },
    "TransplantSceneConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        }
      },
      "title": "TransplantSceneConfig",
      "type": "object"
    },
    "UploaderConfig": {
      "additionalProperties": false,
      "description": "Configuration for policy uploading.",
      "properties": {
        "epoch_interval": {
          "default": 1000,
          "title": "Epoch Interval",
          "type": "integer"
        }
      },
      "title": "UploaderConfig",
      "type": "object"
    },
    "VariedTerrainConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "objects": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Objects",
          "type": "object"
        },
        "agents": {
          "default": 1,
          "title": "Agents",
          "type": "integer"
        },
        "style": {
          "default": "balanced",
          "title": "Style",
          "type": "string"
        }
      },
      "required": [
        "objects"
      ],
      "title": "VariedTerrainConfig",
      "type": "object"
    },
    "VerticalMirrorConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "scene": {
          "$ref": "#/$defs/SceneConfig"
        }
      },
      "required": [
        "scene"
      ],
      "title": "VerticalMirrorConfig",
      "type": "object"
    },
    "WFCConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "pattern": {
          "title": "Pattern",
          "type": "string"
        },
        "pattern_size": {
          "default": 3,
          "title": "Pattern Size",
          "type": "integer"
        },
        "next_node_heuristic": {
          "default": "entropy",
          "enum": [
            "scanline",
            "mrv",
            "entropy"
          ],
          "title": "Next Node Heuristic",
          "type": "string"
        },
        "periodic_input": {
          "default": true,
          "title": "Periodic Input",
          "type": "boolean"
        },
        "symmetry": {
          "default": "all",
          "enum": [
            "all",
            "horizontal",
            "none"
          ],
          "title": "Symmetry",
          "type": "string"
        },
        "attempts": {
          "default": 1000,
          "title": "Attempts",
          "type": "integer"
        }
      },
      "required": [
        "pattern"
      ],
      "title": "WFCConfig",
      "type": "object"
    },
    "WallConfig": {
      "additionalProperties": false,
      "description": "Python wall/block configuration.",
      "properties": {
        "name": {
          "default": "",
          "description": "Object name (used for identification)",
          "title": "Name",
          "type": "string"
        },
        "type_id": {
          "description": "Numeric type ID for C++ runtime",
          "maximum": 255,
          "minimum": 0,
          "title": "Type Id",
          "type": "integer"
        },
        "map_char": {
          "default": "?",
          "description": "Character used in ASCII maps",
          "title": "Map Char",
          "type": "string"
        },
        "render_symbol": {
          "default": "\u2753",
          "description": "Symbol used for rendering (e.g., emoji)",
          "title": "Render Symbol",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this object instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "type": {
          "const": "wall",
          "default": "wall",
          "title": "Type",
          "type": "string"
        },
        "swappable": {
          "default": false,
          "title": "Swappable",
          "type": "boolean"
        }
      },
      "required": [
        "type_id"
      ],
      "title": "WallConfig",
      "type": "object"
    },
    "WandbAborterConfig": {
      "additionalProperties": false,
      "description": "Configuration for wandb abort polling.",
      "properties": {
        "epoch_interval": {
          "default": 5,
          "title": "Epoch Interval",
          "type": "integer"
        }
      },
      "title": "WandbAborterConfig",
      "type": "object"
    },
    "WandbConfig": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "project": {
          "title": "Project",
          "type": "string"
        },
        "entity": {
          "title": "Entity",
          "type": "string"
        },
        "group": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Group"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "run_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Run Id"
        },
        "data_dir": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data Dir"
        },
        "job_type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Job Type"
        },
        "tags": {
          "default": [],
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "notes": {
          "default": "",
          "title": "Notes",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "project",
        "entity"
      ],
      "title": "WandbConfig",
      "type": "object"
    },
    "X4MirrorConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "scene": {
          "$ref": "#/$defs/SceneConfig"
        }
      },
      "required": [
        "scene"
      ],
      "title": "X4MirrorConfig",
      "type": "object"
    },
    "YamlSceneConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "transform": {
          "$ref": "#/$defs/GridTransform",
          "default": "identity"
        },
        "file": {
          "title": "File",
          "type": "string"
        }
      },
      "required": [
        "file"
      ],
      "title": "YamlSceneConfig",
      "type": "object"
    },
    "mettagrid__base_config__Config": {
      "additionalProperties": false,
      "description": "Common extension of Pydantic's BaseModel that:\n- sets `extra=\"forbid\"` by default\n- adds `override` and `update` methods for overriding values based on `path.to.value` keys",
      "properties": {},
      "title": "mettagrid.base_config.Config",
      "type": "object"
    },
    "mettagrid__map_builder__ascii__AsciiMapBuilder__Config": {
      "additionalProperties": false,
      "properties": {
        "map_data": {
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": "Map Data",
          "type": "array"
        },
        "char_to_name_map": {
          "additionalProperties": {
            "type": "string"
          },
          "title": "Char To Name Map",
          "type": "object"
        }
      },
      "required": [
        "map_data"
      ],
      "title": "mettagrid.map_builder.ascii.AsciiMapBuilder.Config",
      "type": "object"
    },
    "mettagrid__map_builder__random__RandomMapBuilder__Config": {
      "additionalProperties": false,
      "description": "Configuration for building a random map.",
      "properties": {
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "width": {
          "default": 10,
          "title": "Width",
          "type": "integer"
        },
        "height": {
          "default": 10,
          "title": "Height",
          "type": "integer"
        },
        "objects": {
          "additionalProperties": {
            "type": "integer"
          },
          "default": {},
          "title": "Objects",
          "type": "object"
        },
        "agents": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            }
          ],
          "default": 0,
          "title": "Agents"
        },
        "border_width": {
          "default": 0,
          "title": "Border Width",
          "type": "integer"
        },
        "border_object": {
          "default": "wall",
          "title": "Border Object",
          "type": "string"
        }
      },
      "title": "mettagrid.map_builder.random.RandomMapBuilder.Config",
      "type": "object"
    },
    "mettagrid__mapgen__mapgen__MapGen__Config": {
      "additionalProperties": false,
      "properties": {
        "border_width": {
          "default": 5,
          "description": "Default value guarantees that agents don't see beyond the outer walls. This value usually shouldn't be changed.",
          "minimum": 0,
          "title": "Border Width",
          "type": "integer"
        },
        "seed": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Random seed. If not set, a random seed will be generated. Seeds for root scene and all its children will be derived from this seed, unless they set their own seeds.",
          "title": "Seed"
        },
        "instance": {
          "anyOf": [
            {
              "$ref": "#/$defs/SceneConfig"
            },
            {
              "$ref": "#/$defs/MapBuilderConfig_Any_"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Instance"
        },
        "instance_map": {
          "anyOf": [
            {
              "$ref": "#/$defs/MapBuilderConfig_Any_"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "deprecated": true
        },
        "root": {
          "anyOf": [
            {
              "$ref": "#/$defs/SceneConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "deprecated": true
        },
        "width": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inner grid width. Doesn't take outer border into account. If `instance` is a MapBuilder\n            config, this field must be None; otherwise, it must be set. If `instances` is set, this is the size used for\n            each instance.",
          "title": "Width"
        },
        "height": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inner grid width. Doesn't take outer border into account. If `instance` is a MapBuilder\n            config, this field must be None; otherwise, it must be set. If `instances` is set, this is the size used for\n            each instance.",
          "title": "Height"
        },
        "instances": {
          "anyOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Instances"
        },
        "num_agents": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Num Agents"
        },
        "instance_border_width": {
          "default": 5,
          "minimum": 0,
          "title": "Instance Border Width",
          "type": "integer"
        }
      },
      "title": "mettagrid.mapgen.mapgen.MapGen.Config",
      "type": "object"
    }
  },
  "title": "Gridworks Schemas"
}
