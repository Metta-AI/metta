# MODULE.bazel for mettagrid - using Bzlmod (modern Bazel module system)
module(name = "mettagrid", version = "0.1.6")

# Basic Bazel dependencies
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "bazel_skylib", version = "1.8.1")

# C++ rules and toolchain
bazel_dep(name = "rules_cc", version = "0.2.0")

# Python toolchain - use latest compatible version
bazel_dep(name = "rules_python", version = "1.5.3")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.11",
    is_default = True,
)

# pybind11 for Python bindings
bazel_dep(name = "pybind11_bazel", version = "2.13.6")

# Google Test for testing
bazel_dep(name = "googletest", version = "1.17.0")

# Google Benchmark for benchmarking
bazel_dep(name = "google_benchmark", version = "1.9.4")

# Abseil (dependency of some Google libraries)
bazel_dep(name = "abseil-cpp", version = "20250814.0")

# Linting and formatting with rules_lint
bazel_dep(name = "aspect_bazel_lib", version = "2.21.1")
bazel_dep(name = "aspect_rules_lint", version = "1.6.0")

# Build Raylib from source using rules_foreign_cc (CMake)
bazel_dep(name = "rules_foreign_cc", version = "0.15.0")

# Register module extension that fetches Raylib and builds a shared library
raylib = use_extension("//:bazel/raylib_cmake_ext.bzl", "raylib_cmake_ext")
raylib.cfg(version = "5.5", sha256 = "aea98ecf5bc5c5e0b789a76de0083a21a70457050ea4cc2aec7566935f5e258e")
use_repo(raylib, "raylib_src")
