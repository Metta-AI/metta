name: training-integration-test
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name != 'workflow_call' }}
on:
  workflow_dispatch: {}
  workflow_call:
    inputs:
      ref:
        required: false
        type: string

jobs:
  training-integration-test:
    if: >-
      github.event.pull_request.draft == false || 
      github.event_name == 'push' || 
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'workflow_call'
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      CHECKPOINT_PATH: ./train_dir/github_test/checkpoints/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
             
      - name: List installed packages
        run: |
          source venv/bin/activate
          pip list
          
      - name: Training smoke test
        env:
          HYDRA_FULL_ERROR: 1
          PYTHONPATH: ${{ github.workspace }}
          WANDB_API_KEY: set_but_not_used
          AWS_ACCESS_KEY_ID: set_but_not_used
          AWS_SECRET_ACCESS_KEY: set_but_not_used
        run: |
          source venv/bin/activate
          python -m tools.train +hardware=github wandb=off
          ls -la $CHECKPOINT_PATH || echo "Warning: Checkpoint directory not created"
          
      - name: Upload training output
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: train-output
          path: train_dir/
          retention-days: 1
          if-no-files-found: error
          
      - name: Download training output
        if: success()
        uses: actions/download-artifact@v4
        with:
          name: train-output
          path: train_dir/
          
      - name: Verify training artifacts
        if: success()
        run: |
          source venv/bin/activate
          ls -la train_dir/
          ls -la $CHECKPOINT_PATH || echo "Checkpoint directory not found!"
          
      - name: Replay smoke test
        env:
          HYDRA_FULL_ERROR: 1
          PYTHONPATH: ${{ github.workspace }}
          WANDB_API_KEY: set_but_not_used
          AWS_ACCESS_KEY_ID: set_but_not_used
          AWS_SECRET_ACCESS_KEY: set_but_not_used
        run: |
          source venv/bin/activate
          python -m tools.replay +hardware=github wandb=off
          
      - name: Debug on failure
        if: failure()
        run: |
          source venv/bin/activate
          echo "Listing the contents of the workspace:"
          find train_dir -type f -name "*.py" | sort
          find train_dir -type d | sort