name: "Setup uv"
description: "Set up uv and activate the environment"
inputs:
  include-dev:
    description: "Whether to include dev dependencies"
    required: false
    default: "true"
  install-mode:
    description: "Installation mode: 'full' (default), 'no-mettagrid', or 'linting'"
    required: false
    default: "full"

runs:
  using: "composite"
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.7.3"
        enable-cache: true

    - name: Create virtual environment with uv
      shell: bash
      run: |
        uv venv

        # Export environment variables
        echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
        echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

        # Handle different installation modes
        case "${{ inputs.install-mode }}" in
          "no-mettagrid")
            # Install specific workspace members excluding mettagrid
            echo "Installing dependencies and workspace members (except mettagrid)..."
            # First sync to get all external dependencies
            uv sync --no-install-workspace
            # Then install specific workspace members (excluding mettagrid)
            uv pip install --no-deps -e .
            uv pip install --no-deps -e ./common
            uv pip install --no-deps -e ./agent
            uv pip install --no-deps -e ./app_backend
            # Also install mettagrid's build dependencies
            echo "Installing build dependencies..."
            uv pip install scikit-build-core
            echo "Installing test dependencies..."
            uv pip install pytest pytest-cov
            ;;
          "linting")
            # Just install linting tools
            uv pip install ruff cpplint
            ;;
          "full"|*)
            # Normal installation
            if [ "${{ inputs.include-dev }}" = "true" ]; then
              uv sync
            else
              uv sync --no-default-groups
            fi
            ;;
        esac
