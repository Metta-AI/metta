[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "agora"
description = "Adaptive curriculum learning for reinforcement learning agents"
readme = "README.md"
requires-python = ">=3.11,<3.13"
authors = [
    { name = "Metta AI Team", email = "team@metta.ai" }
]
license = { text = "MIT" }
keywords = [
    "reinforcement-learning",
    "curriculum-learning",
    "adaptive-learning",
    "machine-learning",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=2.0.0",
    "pydantic>=2.11.5",
]
dynamic = ["version"]

[project.optional-dependencies]
puffer = ["pufferlib-core"]
mettagrid = ["mettagrid"]
all = ["pufferlib-core", "mettagrid"]
dev = [
    "pytest>=8.3.3",
    "pytest-xdist>=3.8.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.7.0",
    "mypy>=1.11.0",
]

[project.urls]
Homepage = "https://github.com/Metta-AI/metta"
Documentation = "https://github.com/Metta-AI/metta/tree/main/packages/agora"
Repository = "https://github.com/Metta-AI/metta"
Issues = "https://github.com/Metta-AI/metta/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["agora", "agora.*"]

[tool.setuptools.package-data]
agora = ["py.typed"]

[tool.setuptools_scm]
tag_regex = "^agora-v(?P<version>\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?)$"
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"
root = "../.."
fallback_version = "0.1.0"

[tool.setuptools_scm.scm.git]
describe_command = [
    "git", "describe", "--dirty", "--tags", "--long",
    "--match", "agora-v*",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
addopts = "--strict-markers --cov=agora --cov-report=term-missing"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.uv.sources]
mettagrid = { workspace = true }
pufferlib-core = { workspace = true }

