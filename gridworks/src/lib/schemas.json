{
  "$defs": {
    "ActionConfig": {
      "additionalProperties": false,
      "description": "Python action configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "required_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Required Resources",
          "type": "object"
        },
        "consumed_resources": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Consumed Resources",
          "type": "object"
        }
      },
      "title": "ActionConfig",
      "type": "object"
    },
    "ActionsConfig": {
      "additionalProperties": false,
      "description": "Actions configuration.\n\nOmitted actions are disabled by default.",
      "properties": {
        "noop": {
          "$ref": "#/$defs/ActionConfig"
        },
        "move": {
          "$ref": "#/$defs/ActionConfig"
        },
        "rotate": {
          "$ref": "#/$defs/ActionConfig"
        },
        "put_items": {
          "$ref": "#/$defs/ActionConfig"
        },
        "get_items": {
          "$ref": "#/$defs/ActionConfig"
        },
        "attack": {
          "$ref": "#/$defs/AttackActionConfig"
        },
        "swap": {
          "$ref": "#/$defs/ActionConfig"
        },
        "change_color": {
          "$ref": "#/$defs/ActionConfig"
        },
        "change_glyph": {
          "$ref": "#/$defs/ChangeGlyphActionConfig"
        },
        "resource_mod": {
          "$ref": "#/$defs/ResourceModActionConfig"
        }
      },
      "title": "ActionsConfig",
      "type": "object"
    },
    "AgentConfig": {
      "additionalProperties": false,
      "description": "Python agent configuration.",
      "properties": {
        "default_resource_limit": {
          "default": 255,
          "minimum": 0,
          "title": "Default Resource Limit",
          "type": "integer"
        },
        "resource_limits": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Resource limits - keys can be single resource names or tuples of names for shared limits",
          "title": "Resource Limits",
          "type": "object"
        },
        "freeze_duration": {
          "default": 10,
          "minimum": -1,
          "title": "Freeze Duration",
          "type": "integer"
        },
        "rewards": {
          "$ref": "#/$defs/AgentRewards"
        },
        "action_failure_penalty": {
          "default": 0,
          "minimum": 0,
          "title": "Action Failure Penalty",
          "type": "number"
        },
        "initial_inventory": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Initial Inventory",
          "type": "object"
        },
        "team_id": {
          "default": 0,
          "description": "Team identifier for grouping agents",
          "minimum": 0,
          "title": "Team Id",
          "type": "integer"
        },
        "tags": {
          "description": "Tags for this agent instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "soul_bound_resources": {
          "description": "Resources that cannot be stolen during attacks",
          "items": {
            "type": "string"
          },
          "title": "Soul Bound Resources",
          "type": "array"
        },
        "shareable_resources": {
          "description": "Resources that will be shared when we use another agent",
          "items": {
            "type": "string"
          },
          "title": "Shareable Resources",
          "type": "array"
        },
        "inventory_regen_amounts": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Resources to regenerate and their amounts per regeneration interval",
          "title": "Inventory Regen Amounts",
          "type": "object"
        }
      },
      "title": "AgentConfig",
      "type": "object"
    },
    "AgentRewards": {
      "additionalProperties": false,
      "description": "Agent reward configuration with separate inventory and stats rewards.",
      "properties": {
        "inventory": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Inventory",
          "type": "object"
        },
        "inventory_max": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Inventory Max",
          "type": "object"
        },
        "stats": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Stats",
          "type": "object"
        },
        "stats_max": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Stats Max",
          "type": "object"
        }
      },
      "title": "AgentRewards",
      "type": "object"
    },
    "AreaWhere": {
      "additionalProperties": false,
      "properties": {
        "tags": {
          "default": [],
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        }
      },
      "title": "AreaWhere",
      "type": "object"
    },
    "AssemblerConfig": {
      "additionalProperties": false,
      "description": "Python assembler configuration.",
      "properties": {
        "name": {
          "default": "",
          "description": "Object name (used for identification)",
          "title": "Name",
          "type": "string"
        },
        "type_id": {
          "description": "Numeric type ID for C++ runtime",
          "maximum": 255,
          "minimum": 0,
          "title": "Type Id",
          "type": "integer"
        },
        "map_char": {
          "default": "?",
          "description": "Character used in ASCII maps",
          "title": "Map Char",
          "type": "string"
        },
        "render_symbol": {
          "default": "\u2753",
          "description": "Symbol used for rendering (e.g., emoji)",
          "title": "Render Symbol",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this object instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "type": {
          "const": "assembler",
          "default": "assembler",
          "title": "Type",
          "type": "string"
        },
        "recipes": {
          "items": {
            "maxItems": 2,
            "minItems": 2,
            "prefixItems": [
              {
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "NW",
                        "N",
                        "NE",
                        "W",
                        "E",
                        "SW",
                        "S",
                        "SE"
                      ],
                      "type": "string"
                    },
                    {
                      "const": "Any",
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "$ref": "#/$defs/RecipeConfig"
              }
            ],
            "type": "array"
          },
          "title": "Recipes",
          "type": "array"
        },
        "allow_partial_usage": {
          "default": false,
          "description": "Allow assembler to be used during cooldown with scaled resource requirements/outputs. This makes less sense if the assembler has multiple recipes.",
          "title": "Allow Partial Usage",
          "type": "boolean"
        },
        "max_uses": {
          "default": 0,
          "description": "Maximum number of uses (0 = unlimited)",
          "minimum": 0,
          "title": "Max Uses",
          "type": "integer"
        },
        "exhaustion": {
          "default": 0.0,
          "description": "Exhaustion rate - cooldown multiplier grows by (1 + exhaustion) after each use (0 = no exhaustion)",
          "minimum": 0.0,
          "title": "Exhaustion",
          "type": "number"
        },
        "clip_immune": {
          "default": false,
          "description": "If true, this assembler cannot be clipped by the Clipper system",
          "title": "Clip Immune",
          "type": "boolean"
        },
        "start_clipped": {
          "default": false,
          "description": "If true, this assembler starts in a clipped state at the beginning of the game",
          "title": "Start Clipped",
          "type": "boolean"
        }
      },
      "required": [
        "type_id"
      ],
      "title": "AssemblerConfig",
      "type": "object"
    },
    "AttackActionConfig": {
      "additionalProperties": false,
      "description": "Python attack action configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "required_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Required Resources",
          "type": "object"
        },
        "consumed_resources": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Consumed Resources",
          "type": "object"
        },
        "defense_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Defense Resources",
          "type": "object"
        }
      },
      "title": "AttackActionConfig",
      "type": "object"
    },
    "BaseIntDistribution": {
      "properties": {},
      "title": "BaseIntDistribution",
      "type": "object"
    },
    "ChangeGlyphActionConfig": {
      "additionalProperties": false,
      "description": "Change glyph action configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "required_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Required Resources",
          "type": "object"
        },
        "consumed_resources": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Consumed Resources",
          "type": "object"
        },
        "number_of_glyphs": {
          "default": 0,
          "maximum": 255,
          "minimum": 0,
          "title": "Number Of Glyphs",
          "type": "integer"
        }
      },
      "title": "ChangeGlyphActionConfig",
      "type": "object"
    },
    "ChestConfig": {
      "additionalProperties": false,
      "description": "Python chest configuration.",
      "properties": {
        "name": {
          "default": "",
          "description": "Object name (used for identification)",
          "title": "Name",
          "type": "string"
        },
        "type_id": {
          "description": "Numeric type ID for C++ runtime",
          "maximum": 255,
          "minimum": 0,
          "title": "Type Id",
          "type": "integer"
        },
        "map_char": {
          "default": "?",
          "description": "Character used in ASCII maps",
          "title": "Map Char",
          "type": "string"
        },
        "render_symbol": {
          "default": "\u2753",
          "description": "Symbol used for rendering (e.g., emoji)",
          "title": "Render Symbol",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this object instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "type": {
          "const": "chest",
          "default": "chest",
          "title": "Type",
          "type": "string"
        },
        "resource_type": {
          "description": "Resource type that this chest can store",
          "title": "Resource Type",
          "type": "string"
        },
        "position_deltas": {
          "description": "List of (position, delta) tuples. Positive delta = deposit, negative = withdraw (e.g., (E, 1) deposits 1, (N, -5) withdraws 5)",
          "items": {
            "maxItems": 2,
            "minItems": 2,
            "prefixItems": [
              {
                "enum": [
                  "NW",
                  "N",
                  "NE",
                  "W",
                  "E",
                  "SW",
                  "S",
                  "SE"
                ],
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "type": "array"
          },
          "title": "Position Deltas",
          "type": "array"
        },
        "initial_inventory": {
          "default": 0,
          "description": "Initial amount of resource_type in the chest",
          "minimum": 0,
          "title": "Initial Inventory",
          "type": "integer"
        },
        "max_inventory": {
          "default": 255,
          "description": "Maximum inventory (resources are destroyed when depositing beyond this, -1 = unlimited)",
          "minimum": -1,
          "title": "Max Inventory",
          "type": "integer"
        }
      },
      "required": [
        "type_id",
        "resource_type"
      ],
      "title": "ChestConfig",
      "type": "object"
    },
    "ChildrenAction": {
      "additionalProperties": false,
      "properties": {
        "limit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Limit"
        },
        "offset": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Offset"
        },
        "lock": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lock"
        },
        "where": {
          "anyOf": [
            {
              "const": "full",
              "type": "string"
            },
            {
              "$ref": "#/$defs/AreaWhere"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Where"
        },
        "order_by": {
          "default": "random",
          "enum": [
            "random",
            "first",
            "last"
          ],
          "title": "Order By",
          "type": "string"
        },
        "scene": {
          "$ref": "#/$defs/SceneConfig"
        }
      },
      "required": [
        "scene"
      ],
      "title": "ChildrenAction",
      "type": "object"
    },
    "ClipperConfig": {
      "additionalProperties": false,
      "description": "Global clipper that probabilistically clips assemblers each tick.\n\nThe clipper system uses a spatial diffusion process where clipping spreads\nbased on distance from already-clipped buildings. The length_scale parameter\ncontrols the exponential decay: weight = exp(-distance / length_scale).\n\nIf length_scale is <= 0 (default 0.0), it will be automatically calculated\nat runtime in C++ using percolation based on the actual grid size and\nnumber of buildings placed. Set length_scale > 0 to use a manual value instead.\n\nIf cutoff_distance is <= 0 (default 0.0), it will be automatically set to\n3 * length_scale at runtime. At this distance, exp(-3) \u2248 0.05, making weights\nnegligible. Set cutoff_distance > 0 to use a manual cutoff.",
      "properties": {
        "unclipping_recipes": {
          "items": {
            "$ref": "#/$defs/RecipeConfig"
          },
          "title": "Unclipping Recipes",
          "type": "array"
        },
        "length_scale": {
          "default": 0.0,
          "description": "Controls spatial spread rate: weight = exp(-distance / length_scale). If <= 0, automatically calculated using percolation at runtime.",
          "title": "Length Scale",
          "type": "number"
        },
        "cutoff_distance": {
          "default": 0.0,
          "description": "Maximum distance for infection weight calculations. If <= 0, automatically set to 3 * length_scale at runtime.",
          "minimum": 0.0,
          "title": "Cutoff Distance",
          "type": "number"
        },
        "clip_rate": {
          "default": 0.0,
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Clip Rate",
          "type": "number"
        }
      },
      "title": "ClipperConfig",
      "type": "object"
    },
    "ConverterConfig": {
      "additionalProperties": false,
      "description": "Python converter configuration.",
      "properties": {
        "name": {
          "default": "",
          "description": "Object name (used for identification)",
          "title": "Name",
          "type": "string"
        },
        "type_id": {
          "description": "Numeric type ID for C++ runtime",
          "maximum": 255,
          "minimum": 0,
          "title": "Type Id",
          "type": "integer"
        },
        "map_char": {
          "default": "?",
          "description": "Character used in ASCII maps",
          "title": "Map Char",
          "type": "string"
        },
        "render_symbol": {
          "default": "\u2753",
          "description": "Symbol used for rendering (e.g., emoji)",
          "title": "Render Symbol",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this object instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "type": {
          "const": "converter",
          "default": "converter",
          "title": "Type",
          "type": "string"
        },
        "input_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Input Resources",
          "type": "object"
        },
        "output_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Output Resources",
          "type": "object"
        },
        "max_output": {
          "default": 5,
          "minimum": -1,
          "title": "Max Output",
          "type": "integer"
        },
        "max_conversions": {
          "default": -1,
          "title": "Max Conversions",
          "type": "integer"
        },
        "conversion_ticks": {
          "default": 1,
          "minimum": 0,
          "title": "Conversion Ticks",
          "type": "integer"
        },
        "cooldown": {
          "minimum": 0,
          "title": "Cooldown",
          "type": "integer"
        },
        "initial_resource_count": {
          "default": 0,
          "minimum": 0,
          "title": "Initial Resource Count",
          "type": "integer"
        },
        "color": {
          "default": 0,
          "maximum": 255,
          "minimum": 0,
          "title": "Color",
          "type": "integer"
        }
      },
      "required": [
        "type_id",
        "cooldown"
      ],
      "title": "ConverterConfig",
      "type": "object"
    },
    "GameConfig": {
      "additionalProperties": false,
      "description": "Python game configuration.",
      "properties": {
        "resource_names": {
          "default": [
            "ore_red",
            "ore_blue",
            "ore_green",
            "battery_red",
            "battery_blue",
            "battery_green",
            "heart",
            "armor",
            "laser",
            "blueprint"
          ],
          "items": {
            "type": "string"
          },
          "title": "Resource Names",
          "type": "array"
        },
        "num_agents": {
          "default": 24,
          "minimum": 1,
          "title": "Num Agents",
          "type": "integer"
        },
        "max_steps": {
          "default": 1000,
          "minimum": 0,
          "title": "Max Steps",
          "type": "integer"
        },
        "episode_truncates": {
          "default": false,
          "title": "Episode Truncates",
          "type": "boolean"
        },
        "obs_width": {
          "default": 11,
          "enum": [
            3,
            5,
            7,
            9,
            11,
            13,
            15
          ],
          "title": "Obs Width",
          "type": "integer"
        },
        "obs_height": {
          "default": 11,
          "enum": [
            3,
            5,
            7,
            9,
            11,
            13,
            15
          ],
          "title": "Obs Height",
          "type": "integer"
        },
        "num_observation_tokens": {
          "default": 200,
          "minimum": 1,
          "title": "Num Observation Tokens",
          "type": "integer"
        },
        "agent": {
          "$ref": "#/$defs/AgentConfig"
        },
        "agents": {
          "items": {
            "$ref": "#/$defs/AgentConfig"
          },
          "title": "Agents",
          "type": "array"
        },
        "actions": {
          "$ref": "#/$defs/ActionsConfig"
        },
        "global_obs": {
          "$ref": "#/$defs/GlobalObsConfig"
        },
        "objects": {
          "additionalProperties": {
            "discriminator": {
              "mapping": {
                "assembler": "#/$defs/AssemblerConfig",
                "chest": "#/$defs/ChestConfig",
                "converter": "#/$defs/ConverterConfig",
                "wall": "#/$defs/WallConfig"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/WallConfig"
              },
              {
                "$ref": "#/$defs/ConverterConfig"
              },
              {
                "$ref": "#/$defs/AssemblerConfig"
              },
              {
                "$ref": "#/$defs/ChestConfig"
              }
            ]
          },
          "title": "Objects",
          "type": "object"
        },
        "params": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Params"
        },
        "resource_loss_prob": {
          "default": 0.0,
          "description": "Probability of resource loss per step",
          "title": "Resource Loss Prob",
          "type": "number"
        },
        "inventory_regen_interval": {
          "default": 0,
          "description": "Interval in timesteps between regenerations (0 = disabled)",
          "minimum": 0,
          "title": "Inventory Regen Interval",
          "type": "integer"
        },
        "clipper": {
          "anyOf": [
            {
              "$ref": "#/$defs/ClipperConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Global clipper configuration"
        },
        "map_builder": {
          "$ref": "#/$defs/MapBuilderConfig_Any_",
          "default": {
            "type": "mettagrid.map_builder.random.RandomMapBuilder",
            "seed": null,
            "width": 10,
            "height": 10,
            "objects": {},
            "agents": 24,
            "border_width": 0,
            "border_object": "wall"
          }
        },
        "track_movement_metrics": {
          "default": true,
          "description": "Enable movement metrics tracking (sequential rotations)",
          "title": "Track Movement Metrics",
          "type": "boolean"
        },
        "recipe_details_obs": {
          "default": false,
          "description": "Converters show their recipe inputs and outputs when observed",
          "title": "Recipe Details Obs",
          "type": "boolean"
        },
        "allow_diagonals": {
          "default": false,
          "description": "Enable actions to be aware of diagonal orientations",
          "title": "Allow Diagonals",
          "type": "boolean"
        },
        "reward_estimates": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "number"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reward Estimates"
        }
      },
      "title": "GameConfig",
      "type": "object"
    },
    "GlobalObsConfig": {
      "additionalProperties": false,
      "description": "Global observation configuration.",
      "properties": {
        "episode_completion_pct": {
          "default": true,
          "title": "Episode Completion Pct",
          "type": "boolean"
        },
        "last_action": {
          "default": true,
          "title": "Last Action",
          "type": "boolean"
        },
        "last_reward": {
          "default": true,
          "title": "Last Reward",
          "type": "boolean"
        },
        "visitation_counts": {
          "default": false,
          "title": "Visitation Counts",
          "type": "boolean"
        }
      },
      "title": "GlobalObsConfig",
      "type": "object"
    },
    "MapBuilderConfig_Any_": {
      "additionalProperties": false,
      "properties": {},
      "title": "MapBuilderConfig[Any]",
      "type": "object"
    },
    "MazeConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "algorithm": {
          "default": "kruskal",
          "enum": [
            "kruskal",
            "dfs"
          ],
          "title": "Algorithm",
          "type": "string"
        },
        "room_size": {
          "$ref": "#/$defs/BaseIntDistribution",
          "default": {
            "value": 1
          }
        },
        "wall_size": {
          "$ref": "#/$defs/BaseIntDistribution",
          "default": {
            "value": 1
          }
        }
      },
      "title": "MazeConfig",
      "type": "object"
    },
    "MettaGridConfig": {
      "additionalProperties": false,
      "description": "Environment configuration.",
      "properties": {
        "label": {
          "default": "mettagrid",
          "title": "Label",
          "type": "string"
        },
        "game": {
          "$ref": "#/$defs/GameConfig"
        },
        "desync_episodes": {
          "default": true,
          "title": "Desync Episodes",
          "type": "boolean"
        }
      },
      "title": "MettaGridConfig",
      "type": "object"
    },
    "RandomConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "objects": {
          "additionalProperties": {
            "type": "integer"
          },
          "default": {},
          "title": "Objects",
          "type": "object"
        },
        "agents": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            }
          ],
          "default": 0,
          "title": "Agents"
        },
        "too_many_is_ok": {
          "default": true,
          "title": "Too Many Is Ok",
          "type": "boolean"
        }
      },
      "title": "RandomConfig",
      "type": "object"
    },
    "RecipeConfig": {
      "additionalProperties": false,
      "properties": {
        "input_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Input Resources",
          "type": "object"
        },
        "output_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Output Resources",
          "type": "object"
        },
        "cooldown": {
          "default": 0,
          "minimum": 0,
          "title": "Cooldown",
          "type": "integer"
        }
      },
      "title": "RecipeConfig",
      "type": "object"
    },
    "ResourceModActionConfig": {
      "additionalProperties": false,
      "description": "Resource mod action configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "required_resources": {
          "additionalProperties": {
            "type": "integer"
          },
          "title": "Required Resources",
          "type": "object"
        },
        "consumed_resources": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Consumed Resources",
          "type": "object"
        },
        "modifies": {
          "additionalProperties": {
            "type": "number"
          },
          "title": "Modifies",
          "type": "object"
        },
        "agent_radius": {
          "default": 0,
          "maximum": 255,
          "minimum": 0,
          "title": "Agent Radius",
          "type": "integer"
        },
        "converter_radius": {
          "default": 0,
          "maximum": 255,
          "minimum": 0,
          "title": "Converter Radius",
          "type": "integer"
        },
        "scales": {
          "default": false,
          "title": "Scales",
          "type": "boolean"
        }
      },
      "title": "ResourceModActionConfig",
      "type": "object"
    },
    "SceneConfig": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ChildrenAction"
          },
          "title": "Children",
          "type": "array"
        },
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        }
      },
      "title": "SceneConfig",
      "type": "object"
    },
    "SimulationConfig": {
      "additionalProperties": false,
      "description": "Configuration for a single simulation run.",
      "properties": {
        "suite": {
          "description": "Name of the simulation suite",
          "title": "Suite",
          "type": "string"
        },
        "name": {
          "description": "Name of the simulation",
          "title": "Name",
          "type": "string"
        },
        "env": {
          "$ref": "#/$defs/MettaGridConfig"
        },
        "num_episodes": {
          "default": 1,
          "description": "Number of episodes to run",
          "minimum": 1,
          "title": "Num Episodes",
          "type": "integer"
        },
        "max_time_s": {
          "default": 120,
          "description": "Maximum time in seconds to run the simulation",
          "minimum": 0,
          "title": "Max Time S",
          "type": "integer"
        },
        "npc_policy_uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "URI of the policy to use for NPC agents",
          "title": "Npc Policy Uri"
        },
        "policy_agents_pct": {
          "default": 1.0,
          "description": "pct of agents to be controlled by policies",
          "maximum": 1,
          "minimum": 0,
          "title": "Policy Agents Pct",
          "type": "number"
        },
        "episode_tags": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Tags to add to each episode",
          "title": "Episode Tags"
        }
      },
      "required": [
        "suite",
        "name",
        "env"
      ],
      "title": "SimulationConfig",
      "type": "object"
    },
    "WallConfig": {
      "additionalProperties": false,
      "description": "Python wall/block configuration.",
      "properties": {
        "name": {
          "default": "",
          "description": "Object name (used for identification)",
          "title": "Name",
          "type": "string"
        },
        "type_id": {
          "description": "Numeric type ID for C++ runtime",
          "maximum": 255,
          "minimum": 0,
          "title": "Type Id",
          "type": "integer"
        },
        "map_char": {
          "default": "?",
          "description": "Character used in ASCII maps",
          "title": "Map Char",
          "type": "string"
        },
        "render_symbol": {
          "default": "\u2753",
          "description": "Symbol used for rendering (e.g., emoji)",
          "title": "Render Symbol",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this object instance",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "type": {
          "const": "wall",
          "default": "wall",
          "title": "Type",
          "type": "string"
        },
        "swappable": {
          "default": false,
          "title": "Swappable",
          "type": "boolean"
        }
      },
      "required": [
        "type_id"
      ],
      "title": "WallConfig",
      "type": "object"
    },
    "mettagrid__base_config__Config": {
      "additionalProperties": false,
      "description": "Common extension of Pydantic's BaseModel that:\n- sets `extra=\"forbid\"` by default\n- adds `override` and `update` methods for overriding values based on `path.to.value` keys",
      "properties": {},
      "title": "mettagrid.base_config.Config",
      "type": "object"
    },
    "mettagrid__map_builder__random__RandomMapBuilder__Config": {
      "additionalProperties": false,
      "description": "Configuration for building a random map.",
      "properties": {
        "seed": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Seed"
        },
        "width": {
          "default": 10,
          "title": "Width",
          "type": "integer"
        },
        "height": {
          "default": 10,
          "title": "Height",
          "type": "integer"
        },
        "objects": {
          "additionalProperties": {
            "type": "integer"
          },
          "default": {},
          "title": "Objects",
          "type": "object"
        },
        "agents": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            }
          ],
          "default": 0,
          "title": "Agents"
        },
        "border_width": {
          "default": 0,
          "title": "Border Width",
          "type": "integer"
        },
        "border_object": {
          "default": "wall",
          "title": "Border Object",
          "type": "string"
        }
      },
      "title": "mettagrid.map_builder.random.RandomMapBuilder.Config",
      "type": "object"
    },
    "mettagrid__mapgen__mapgen__MapGen__Config": {
      "additionalProperties": false,
      "properties": {
        "border_width": {
          "default": 5,
          "description": "Default value guarantees that agents don't see beyond the outer walls. This value usually shouldn't be changed.",
          "minimum": 0,
          "title": "Border Width",
          "type": "integer"
        },
        "seed": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Random seed. If not set, a random seed will be generated. Seeds for root scene and all its children will be derived from this seed, unless they set their own seeds.",
          "title": "Seed"
        },
        "instance": {
          "anyOf": [
            {
              "$ref": "#/$defs/SceneConfig"
            },
            {
              "$ref": "#/$defs/MapBuilderConfig_Any_"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Instance"
        },
        "instance_map": {
          "anyOf": [
            {
              "$ref": "#/$defs/MapBuilderConfig_Any_"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "deprecated": true
        },
        "root": {
          "anyOf": [
            {
              "$ref": "#/$defs/SceneConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "deprecated": true
        },
        "width": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Width"
        },
        "height": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Height"
        },
        "instances": {
          "anyOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Instances"
        },
        "num_agents": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Num Agents"
        },
        "instance_border_width": {
          "default": 5,
          "minimum": 0,
          "title": "Instance Border Width",
          "type": "integer"
        }
      },
      "title": "mettagrid.mapgen.mapgen.MapGen.Config",
      "type": "object"
    }
  },
  "title": "Gridworks Schemas"
}
