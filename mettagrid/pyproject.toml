[build-system]
requires = ["scikit-build-core", "wheel", "numpy==2.2.5", "pybind11==2.10.4"]
build-backend = "scikit_build_core.build"

[project]
name = "mettagrid"
version = "0.1.6"
description = "A fast grid-based open-ended MARL environment"
authors = [{ name = "David Bloomin", email = "daveey@gmail.com" }]
requires-python = "==3.11.7"
license = "MIT"
readme = "README.md"
urls = { Homepage = "https://daveey.github.io", Repository = "https://github.com/Metta-AI/mettagrid" }
keywords = [
    "gridworld",
    "minigrid",
    "rl",
    "reinforcement-learning",
    "environment",
    "gym",
]
dependencies = [
    "boto3>=1.38.32",
    "botocore>=1.38.29",
    "duckdb>=1.3.0",
    "filelock>=3.18.0",
    "gymnasium>=1.1.1",
    "hydra-core>=1.4.0.dev1",
    "matplotlib>=3.10.3",
    "numpy>=2.2.6",
    "omegaconf>=2.4.0.dev3",
    "pandas>=2.3.0",
    "pettingzoo>=1.25.0",
    "pydantic>=2.11.5",
    "pufferlib",
    "pyyaml>=6.0.2",
    "rich>=13.9.4",
    "scipy>=1.15.3",
    "tabulate>=0.9.0",
    "termcolor>=2.4.0",
    "tqdm>=4.67.1",
    "wandb>=0.19.11",
    "pytest>=8.3.3",
    "pytest-benchmark>=5.1.0",
]

[tool.scikit-build]
# `release-no-tests` is faster than `release` preset.
# uv builds are done in isolated environment, so tests and benchmarks are not built here.
# See `./README.md` for more details.
cmake.args = ["--preset", "release-no-tests"]

# Note: if you decide to use `editable.rebuild` here, consider that it's not
# compatible with isolated builds.
#
# That's because isolated builds produce a `build` directory that refers to the
# temporary isolated environment, which doesn't exist anymore by the time the
# rebuild is triggered by scikit-build.
#
# We could enable uv's `no-build-isolation-package` option, but it creates its
# own issues (we'd have to install build dependencies manually).
#
# So for now we're recompiling the entire package on every C++ code change.

[tool.pytest.ini_options]
# Configuring pytest here causes us to ignore metta/conftest.py
testpaths = ["tests", "benchmarks"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]

[tool.uv]
cache-keys = [
    { file = "pyproject.toml" },
    { file = "CMakeLists.txt" },
    { file = "mettagrid/**/*.{cpp,hpp}" },
]

[tool.uv.sources]
pufferlib = { git = "https://github.com/Metta-AI/PufferLib.git", rev = "dcd597ef1a094cc2da886f5a4ab2c7f1b27d0183" }
