name: "Setup uv"
description: "Set up uv and activate the environment"
inputs:
  install-mode:
    description: "Installation mode: 'testing', 'minimal', or 'linting'"
    required: false
    default: "testing"

runs:
  using: "composite"
  steps:
    - name: Free disk space in background
      shell: bash
      run: |
        # We are always cutting it close on runners and then uv cache gzip fails

        WILL_CLEAN=""
        [[ -d "/usr/local/lib/android" ]] && WILL_CLEAN="Android SDK"

        # Start deletions in background
        if [[ -n "$WILL_CLEAN" ]]; then
          (
            sudo rm -rf /usr/local/lib/android ${ANDROID_HOME} ${ANDROID_SDK_ROOT} 2>/dev/null
          ) &
          echo "✓ Cleaning in background: $WILL_CLEAN"
          echo "  ~8GB will be freed up as your job continues"
        else
          echo "✓ No Android SDK found to clean"
        fi

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.7.3"
        enable-cache: true
        prune-cache: true
        cache-suffix: "${{ inputs.install-mode }}-${{ hashFiles('.github/actions/setup-uv/action.yml') }}"
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock

    - name: Create virtual environment with uv
      shell: bash
      run: |
        uv venv

        echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
        echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

        # Handle different installation modes
        case "${{ inputs.install-mode }}" in

          "minimal")
            # don't install any packages
            ;;

          "linting")
            uv pip install ruff cpplint
            ;;

          "testing")
            uv sync
            uv pip install pytest pytest-cov pytest-xdist pytest-benchmark gcovr
            ;;

        esac
