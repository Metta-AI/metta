name: "Test SkyPilot Notifications"

on:
  workflow_dispatch:
    inputs:
      test_scenario:
        description: "Which notification scenario to test"
        required: true
        default: "job_completed"
        type: choice
        options:
          - job_completed
          - job_failed
          - heartbeat_timeout
          - nccl_tests_failed
          - rapid_restarts
          - max_runtime_reached
jobs:
  test-notifications:
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      contents: read

    steps:
      - name: Checkout PR branch (default behavior)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch main branch HEAD
        run: |
          git fetch origin main
          MAIN_SHA=$(git rev-parse origin/main)
          echo "Main branch HEAD SHA: $MAIN_SHA"
          echo "main_sha=$MAIN_SHA" >> $GITHUB_OUTPUT
        id: get_main_sha

      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          install-mode: minimal
          extra-dependencies: |
            requests>=2.31.0
            dataclasses

      - name: Install required local packages in editable mode
        run: |
          cd common
          uv pip install -e .
          cd ..
          cd gitta
          uv pip install -e .

      - name: Run notification tests
        env:
          PYTHONPATH: .
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_TEST_HOOK }}
          GITHUB_PAT: ${{ secrets.METTA_STATUS_PAT }}
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
          WANDB_ENTITY: "metta-research"
          WANDB_PROJECT: "metta"
          TEST_SCENARIO: ${{ github.event.inputs.test_scenario }}
          GITHUB_SHA: ${{ steps.get_main_sha.outputs.main_sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          uv run .github/scripts/skypilot_notifications_test.py

      - name: Create summary
        if: always()
        run: |
          echo "## 🔔 Notification Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "🔗 [View main commit](https://github.com/${GITHUB_REPOSITORY}/commit/${{ steps.get_main_sha.outputs.main_sha }})" >> $GITHUB_STEP_SUMMARY


          if [ -f "/tmp/notification_test_results.md" ]; then
            cat /tmp/notification_test_results.md >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ No test results found" >> $GITHUB_STEP_SUMMARY
          fi
