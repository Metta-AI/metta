# see reference_design.yaml for explanation of components

# This is a CNN-based model that takes environment tokens and converts them into a box with channels, width, and
# height, and then passes it to a CNN encoder stack. It is not robust to changing observation features. For that,
# use the attention-based models.

_target_: metta.agent.metta_agent.MettaAgent

observations:
  obs_key: grid_obs

clip_range: 0 # set to 0 to disable clipping
analyze_weights_interval: 300

losses:
  # NOTE: losses will be run in the order they are listed here
  PPO:
    # Core PPO hyperparameters
    clip_coef: 0.1
    ent_coef: 0.0021
    gae_lambda: 0.916
    gamma: 0.977

    # Training parameters
    max_grad_norm: 0.5
    vf_clip_coef: 0.1
    vf_coef: 0.44
    l2_reg_loss_coef: 0
    l2_init_loss_coef: 0
    norm_adv: true
    clip_vloss: true
    target_kl: null

    # Prioritized experience replay parameters
    prioritized_experience_replay:
      prio_alpha: 0.0 # Default to uniform sampling (0.0 = uniform, >0 = prioritized)
      prio_beta0: 0.6 # Initial importance sampling correction

    # V-trace clipping parameters (for off-policy corrections)
    vtrace:
      rho_clip: 1.0 # Default: on-policy (no off-policy correction)
      c_clip: 1.0 # Default: on-policy bootstrapping

  # EMA:
  #   decay: 0.996
  #   loss_coef: 1.0

  # SLKickstarter:
  #   teacher_uri: wandb://run/m.av.loss.leader.001
  #   action_loss_coef: 1
  #   value_loss_coef: 1
  #   begin_at_step: 0
  #   end_at_step: 30_000_000

  # TLKickstarter:
  #   teacher_uri: wandb://run/m.av.loss.leader.001
  #   action_loss_coef: 1
  #   value_loss_coef: 1
  #   begin_at_step: 30_000_000
  #   end_at_step: 1_000_000_000
  #   anneal_ratio: 0.65 # ratio of kickstart_steps to anneal to 0 coef

optimizer:
  type: adam
  beta1: 0.9
  beta2: 0.999
  eps: 1e-12
  learning_rate: 0.000457
  weight_decay: 0
  clip_grad_norm: 0

leaf_components: # output heads
  # - EMA_pred_output_2
  - _action_
  - _value_

components:
  #necessary layers: _core_, _action_embeds_, _action_, _value_
  #necessary input_source: _obs_

  _obs_:
    _target_: metta.agent.lib.obs_token_to_box_shaper.ObsTokenToBoxShaper
    sources: null

  obs_normalizer:
    _target_: metta.agent.lib.observation_normalizer.ObservationNormalizer
    sources:
      - name: _obs_

  cnn1:
    _target_: metta.agent.lib.nn_layer_library.Conv2d
    sources:
      - name: obs_normalizer
    nn_params:
      out_channels: 64
      kernel_size: 5
      stride: 3

  cnn2:
    _target_: metta.agent.lib.nn_layer_library.Conv2d
    sources:
      - name: cnn1
    nn_params:
      out_channels: 64
      kernel_size: 3
      stride: 1

  obs_flattener:
    _target_: metta.agent.lib.nn_layer_library.Flatten
    sources:
      - name: cnn2

  fc1:
    _target_: metta.agent.lib.nn_layer_library.Linear
    sources:
      - name: obs_flattener
    nn_params:
      out_features: 128

  encoded_obs:
    _target_: metta.agent.lib.nn_layer_library.Linear
    sources:
      - name: fc1
    nn_params:
      out_features: 128

  _core_:
    _target_: metta.agent.lib.lstm.LSTM
    sources:
      - name: encoded_obs
    nn_params:
      hidden_size: 128
      num_layers: 2

  critic_1:
    _target_: metta.agent.lib.nn_layer_library.Linear
    sources:
      - name: _core_
    nn_params:
      out_features: 1024
    nonlinearity: nn.Tanh
    effective_rank: true

  _value_:
    _target_: metta.agent.lib.nn_layer_library.Linear
    sources:
      - name: critic_1
    nn_params:
      out_features: 1
    nonlinearity: null

  actor_1:
    _target_: metta.agent.lib.nn_layer_library.Linear
    sources:
      - name: _core_
    nn_params:
      out_features: 512

  _action_embeds_:
    _target_: metta.agent.lib.action.ActionEmbedding
    sources: null
    nn_params:
      num_embeddings: 100
      embedding_dim: 16

  _action_:
    _target_: metta.agent.lib.actor.MettaActorSingleHead
    sources:
      - name: actor_1
      - name: _action_embeds_

  # EMA_pred_output_1:
  #   _target_: metta.agent.lib.nn_layer_library.Linear
  #   sources:
  #     - name: _core_
  #   nn_params:
  #     out_features: 512
  #   nonlinearity: nn.Tanh
  #   effective_rank: true

  # EMA_pred_output_2:
  #   _target_: metta.agent.lib.nn_layer_library.Linear
  #   sources:
  #     - name: EMA_pred_output_1
  #   nn_params:
  #     out_features: 32
  #   nonlinearity: null
