FROM nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive
ENV TORCH_CUDA_ARCH_LIST=7.5;8.0;8.6;8.9;9.0
ENV READTHEDOCS=True

RUN apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    python3.11 \
    python3.11-dev \
    python3.11-venv \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

RUN mkdir -p /workspace/metta
WORKDIR /workspace/metta

COPY --from=ghcr.io/astral-sh/uv:0.8.13 /uv /uvx /bin/
ENV UV_LINK_MODE=copy

COPY .python-version pyproject.toml uv.lock ./
COPY mettagrid/pyproject.toml mettagrid/
COPY app_backend/pyproject.toml app_backend/
COPY common/pyproject.toml common/
COPY agent/pyproject.toml agent/
COPY experiments/pyproject.toml experiments/

RUN uv sync --no-install-workspace --frozen

COPY . .

RUN uv sync --locked

RUN rm -rf /root/.cache \
    && find /workspace/metta -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true

FROM nvidia/cuda:12.8.1-cudnn-runtime-ubuntu24.04

ENV DEBIAN_FRONTEND=noninteractive
ENV TORCH_CUDA_ARCH_LIST=7.5;8.0;8.6;8.9;9.0
ENV READTHEDOCS=True

RUN apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
    build-essential \
    python3.11 \
    python3.11-dev \
    python3.11-venv \
    git \
    ca-certificates \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

COPY --from=builder /workspace /workspace
COPY --from=builder /bin/uv /bin/uv
COPY --from=builder /bin/uvx /bin/uvx
COPY --from=builder /root/.local/share/uv /root/.local/share/uv

WORKDIR /workspace/metta

ENV PATH="/workspace/metta/.venv/bin:$PATH"
ENV VIRTUAL_ENV="/workspace/metta/.venv"
ENV UV_LINK_MODE=copy

RUN echo 'cd /workspace/metta' >> /root/.bashrc && \
    echo 'source /workspace/metta/.venv/bin/activate' >> /root/.bashrc

ENTRYPOINT ["/bin/bash", "-c"]