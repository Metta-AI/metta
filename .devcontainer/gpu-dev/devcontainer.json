{
    "name": "Metta GPU Development",
    "image": "mettaai/metta:latest",
    "runArgs": [
        "--gpus",
        "all",
        "--network",
        "host",
        "--ulimit",
        "nofile=64000",
        "--ulimit",
        "nproc=640000",
        "--shm-size=80g",
        "--cap-add=SYS_PTRACE",
        "--security-opt",
        "seccomp=unconfined"
    ],
    "mounts": [
        {
            "source": "/tmp/.X11-unix",
            "target": "/tmp/.X11-unix",
            "type": "bind",
            "consistency": "consistent"
        },
        {
            "source": "/var/run/docker.sock",
            "target": "/var/run/docker.sock",
            "type": "bind",
            "consistency": "consistent"
        },
        {
            "source": "/mnt/wslg",
            "target": "/mnt/wslg",
            "type": "bind",
            "consistency": "consistent"
        },
        {
            "source": "${localEnv:HOME}/.ssh",
            "target": "/root/.ssh",
            "type": "bind",
            "consistency": "consistent"
        },
        {
            "source": "${localEnv:HOME}/.netrc",
            "target": "/root/.netrc",
            "type": "bind",
            "consistency": "consistent"
        },
        {
            "source": "${localWorkspaceFolder}/train_dir",
            "target": "/workspace/metta/train_dir",
            "type": "bind",
            "consistency": "cached"
        },
        {
            "source": "metta-gpu-cache",
            "target": "/root/.cache",
            "type": "volume"
        }
    ],
    "containerEnv": {
        "DISPLAY": "${localEnv:DISPLAY}",
        "WAYLAND_DISPLAY": "${localEnv:WAYLAND_DISPLAY}",
        "XDG_RUNTIME_DIR": "${localEnv:XDG_RUNTIME_DIR}",
        "PULSE_SERVER": "${localEnv:PULSE_SERVER}",
        "METTA_HOST": "${localEnv:HOSTNAME}",
        "METTA_USER": "${localEnv:USER}",
        "WANDB_API_KEY": "${localEnv:WANDB_API_KEY}",
        "CUDA_VISIBLE_DEVICES": "${localEnv:CUDA_VISIBLE_DEVICES}",
        "UV_LINK_MODE": "copy",
        "PATH": "/workspace/metta/.venv/bin:${containerEnv:PATH}"
    },
    "forwardPorts": [
        3000,
        8000,
        6006
    ],
    "portsAttributes": {
        "3000": {
            "label": "Gridworks Frontend",
            "onAutoForward": "notify"
        },
        "8000": {
            "label": "Metta Backend API",
            "onAutoForward": "notify"
        },
        "6006": {
            "label": "Tensorboard",
            "onAutoForward": "notify"
        }
    },
    "postCreateCommand": "uv sync --locked && cd mettagrid && ./build.sh",
    "postStartCommand": "git config --global --add safe.directory /workspace/metta",
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.debugpy",
                "charliermarsh.ruff",
                "ms-vscode.cpptools",
                "ms-vscode.cmake-tools",
                "redhat.vscode-yaml",
                "ms-azuretools.vscode-docker",
                "github.copilot",
                "github.copilot-chat",
                "ms-vscode-remote.remote-containers",
                "tamasfe.even-better-toml",
                "streetsidesoftware.code-spell-checker",
                "usernamehw.errorlens"
            ],
            "settings": {
                "python.defaultInterpreterPath": "/workspace/metta/.venv/bin/python",
                "python.terminal.activateEnvironment": true,
                "python.testing.pytestEnabled": true,
                "python.testing.pytestArgs": [
                    "-v",
                    "--tb=short"
                ],
                "python.testing.unittestEnabled": false,
                "python.testing.autoTestDiscoverOnSaveEnabled": true,
                "python.linting.enabled": false,
                "ruff.enable": true,
                "ruff.nativeServer": "on",
                "ruff.lint.args": [
                    "--config=pyproject.toml"
                ],
                "ruff.format.args": [
                    "--config=pyproject.toml"
                ],
                "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
                "cmake.sourceDirectory": "${workspaceFolder}/mettagrid",
                "cmake.buildDirectory": "${workspaceFolder}/mettagrid/build",
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.env.linux": {
                    "PYTHONPATH": "${workspaceFolder}:${workspaceFolder}/mettagrid/build"
                },
                "files.watcherExclude": {
                    "**/.git/objects/**": true,
                    "**/.git/subtree-cache/**": true,
                    "**/node_modules/**": true,
                    "**/.hg/store/**": true,
                    "**/target/**": true,
                    "**/.venv/**": true,
                    "**/build/**": true,
                    "**/train_dir/**": true,
                    "**/checkpoints/**": true
                }
            }
        }
    },
    "features": {
        "ghcr.io/devcontainers/features/common-utils:2": {
            "installZsh": true,
            "username": "root"
        },
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/nvidia-cuda:1": {
            "installCudnn": true,
            "installNvtx": true,
            "cudaVersion": "12.1",
            "cudnnVersion": "8"
        }
    },
    "remoteUser": "root",
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace/metta,type=bind,consistency=cached",
    "workspaceFolder": "/workspace/metta"
}
