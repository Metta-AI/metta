# Simplified PufferLib-style agent with CNN encoding
_target_: metta.agent.metta_agent.MettaAgent

observations:
  obs_key: grid_obs

clip_range: 0 # set to 0 to disable clipping
analyze_weights_interval: 300
l2_init_weight_update_interval: 0

components:
  #necessary layers: _core_, _action_embeds_, _action_, _value_
  #necessary input_source: _obs_

  _obs_:
    _target_: metta.agent.lib.obs_tokenizers.ObsTokenPadStrip
    sources:
      null

  # CNN path for spatial features
  cnn_conv1:
    _target_: metta.agent.lib.nn_layer_library.Conv2d
    sources:
      - name: _obs_
    nn_params:
      out_channels: 128
      kernel_size: 5
      stride: 3
    nonlinearity: nn.ReLU

  cnn_conv2:
    _target_: metta.agent.lib.nn_layer_library.Conv2d
    sources:
      - name: cnn_conv1
    nn_params:
      out_channels: 128
      kernel_size: 3
      stride: 1
    nonlinearity: nn.ReLU

  cnn_flatten:
    _target_: metta.agent.lib.nn_layer_library.Flatten
    sources:
      - name: cnn_conv2

  cnn_fc:
    _target_: metta.agent.lib.nn_layer_library.Linear
    sources:
      - name: cnn_flatten
    nn_params:
      out_features: 512
    nonlinearity: nn.ReLU

  # LSTM core (simplified - using CNN features directly)
  _core_:
    _target_: metta.agent.lib.lstm.LSTM
    sources:
      - name: cnn_fc
    output_size: 512
    nn_params:
      num_layers: 2

  # Actor head
  _action_embeds_:
    _target_: metta.agent.lib.action.ActionEmbedding
    sources:
      null
    nn_params:
      num_embeddings: 100
      embedding_dim: 16

  _action_:
    _target_: metta.agent.lib.actor.MettaActorSingleHead
    sources:
      - name: _core_
      - name: _action_embeds_

  # Value head
  _value_:
    _target_: metta.agent.lib.nn_layer_library.Linear
    sources:
      - name: _core_
    nn_params:
      out_features: 1
    nonlinearity: null
